using System;
using System.Collections.Generic;
using Helpers;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.LogEntries
{
	// Token: 0x020002D7 RID: 727
	public class DefeatCharacterLogEntry : LogEntry
	{
		// Token: 0x06002ABF RID: 10943 RVA: 0x000B6047 File Offset: 0x000B4247
		internal static void AutoGeneratedStaticCollectObjectsDefeatCharacterLogEntry(object o, List<object> collectedObjects)
		{
			((DefeatCharacterLogEntry)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06002AC0 RID: 10944 RVA: 0x000B6055 File Offset: 0x000B4255
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this.WinnerHero);
			collectedObjects.Add(this.LoserHero);
		}

		// Token: 0x06002AC1 RID: 10945 RVA: 0x000B6076 File Offset: 0x000B4276
		internal static object AutoGeneratedGetMemberValueWinnerHero(object o)
		{
			return ((DefeatCharacterLogEntry)o).WinnerHero;
		}

		// Token: 0x06002AC2 RID: 10946 RVA: 0x000B6083 File Offset: 0x000B4283
		internal static object AutoGeneratedGetMemberValueLoserHero(object o)
		{
			return ((DefeatCharacterLogEntry)o).LoserHero;
		}

		// Token: 0x06002AC3 RID: 10947 RVA: 0x000B6090 File Offset: 0x000B4290
		public DefeatCharacterLogEntry(Hero winner, Hero loser)
		{
			this.WinnerHero = winner;
			this.LoserHero = loser;
		}

		// Token: 0x06002AC4 RID: 10948 RVA: 0x000B60A6 File Offset: 0x000B42A6
		public override ImportanceEnum GetImportanceForClan(Clan clan)
		{
			if (this.WinnerHero.Clan == clan || this.LoserHero.Clan == clan)
			{
				return ImportanceEnum.SlightlyImportant;
			}
			return ImportanceEnum.Zero;
		}

		// Token: 0x06002AC5 RID: 10949 RVA: 0x000B60C8 File Offset: 0x000B42C8
		public override void GetConversationScoreAndComment(Hero talkTroop, bool findString, out string comment, out ImportanceEnum score)
		{
			score = ImportanceEnum.Zero;
			comment = "";
			if (this.WinnerHero == Hero.MainHero)
			{
				if (this.LoserHero == talkTroop)
				{
					score = ImportanceEnum.SlightlyImportant;
					if (findString)
					{
						comment = "str_comment_you_defeated_me_in_single_combat";
						return;
					}
				}
			}
			else if (this.LoserHero == Hero.MainHero && this.WinnerHero == talkTroop)
			{
				score = ImportanceEnum.SlightlyImportant;
				if (findString)
				{
					comment = "str_comment_i_defeated_you_in_single_combat";
				}
			}
		}

		// Token: 0x06002AC6 RID: 10950 RVA: 0x000B612C File Offset: 0x000B432C
		public override string ToString()
		{
			TextObject textObject = new TextObject("{=!}{LOSER.NAME} defeated by {WINNER.NAME}.", null);
			StringHelpers.SetCharacterProperties("WINNER", this.WinnerHero.CharacterObject, textObject, false);
			StringHelpers.SetCharacterProperties("LOSER", this.LoserHero.CharacterObject, textObject, false);
			return textObject.ToString();
		}

		// Token: 0x04000CD1 RID: 3281
		[SaveableField(200)]
		public readonly Hero WinnerHero;

		// Token: 0x04000CD2 RID: 3282
		[SaveableField(201)]
		public readonly Hero LoserHero;
	}
}
