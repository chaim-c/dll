using System;
using System.Collections.Generic;
using System.Xml;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.Localization;
using TaleWorlds.ObjectSystem;

namespace TaleWorlds.CampaignSystem
{
	// Token: 0x02000059 RID: 89
	public class Concept : MBObjectBase
	{
		// Token: 0x06000A60 RID: 2656 RVA: 0x0003B7FB File Offset: 0x000399FB
		internal static void AutoGeneratedStaticCollectObjectsConcept(object o, List<object> collectedObjects)
		{
			((Concept)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06000A61 RID: 2657 RVA: 0x0003B809 File Offset: 0x00039A09
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x17000236 RID: 566
		// (get) Token: 0x06000A62 RID: 2658 RVA: 0x0003B812 File Offset: 0x00039A12
		// (set) Token: 0x06000A63 RID: 2659 RVA: 0x0003B81A File Offset: 0x00039A1A
		public TextObject Title { get; set; }

		// Token: 0x17000237 RID: 567
		// (get) Token: 0x06000A64 RID: 2660 RVA: 0x0003B823 File Offset: 0x00039A23
		// (set) Token: 0x06000A65 RID: 2661 RVA: 0x0003B82B File Offset: 0x00039A2B
		public TextObject Description { get; set; }

		// Token: 0x17000238 RID: 568
		// (get) Token: 0x06000A66 RID: 2662 RVA: 0x0003B834 File Offset: 0x00039A34
		// (set) Token: 0x06000A67 RID: 2663 RVA: 0x0003B83C File Offset: 0x00039A3C
		public string FilterGroup { get; set; }

		// Token: 0x17000239 RID: 569
		// (get) Token: 0x06000A68 RID: 2664 RVA: 0x0003B845 File Offset: 0x00039A45
		// (set) Token: 0x06000A69 RID: 2665 RVA: 0x0003B84D File Offset: 0x00039A4D
		public string LinkID { get; private set; }

		// Token: 0x1700023A RID: 570
		// (get) Token: 0x06000A6A RID: 2666 RVA: 0x0003B856 File Offset: 0x00039A56
		public static MBReadOnlyList<Concept> All
		{
			get
			{
				return Campaign.Current.Concepts;
			}
		}

		// Token: 0x1700023B RID: 571
		// (get) Token: 0x06000A6B RID: 2667 RVA: 0x0003B862 File Offset: 0x00039A62
		public string EncyclopediaLink
		{
			get
			{
				return Campaign.Current.EncyclopediaManager.GetIdentifier(typeof(Concept)) + "-" + base.StringId;
			}
		}

		// Token: 0x1700023C RID: 572
		// (get) Token: 0x06000A6C RID: 2668 RVA: 0x0003B88D File Offset: 0x00039A8D
		public TextObject EncyclopediaLinkWithName
		{
			get
			{
				return HyperlinkTexts.GetConceptHyperlinkText(this.EncyclopediaLink, this.Title);
			}
		}

		// Token: 0x06000A6D RID: 2669 RVA: 0x0003B8A0 File Offset: 0x00039AA0
		public override void Deserialize(MBObjectManager objectManager, XmlNode node)
		{
			base.Deserialize(objectManager, node);
			this.Title = new TextObject(node.Attributes["title"].Value, null);
			this.Description = new TextObject(node.Attributes["text"].Value, null);
			this.FilterGroup = ((node.Attributes["group"] != null) ? node.Attributes["group"].Value : "");
			this.LinkID = node.Attributes["link_id"].Value;
		}

		// Token: 0x06000A6E RID: 2670 RVA: 0x0003B946 File Offset: 0x00039B46
		public static bool IsGroupMember(string groupName, Concept c)
		{
			return c.FilterGroup == groupName;
		}

		// Token: 0x06000A6F RID: 2671 RVA: 0x0003B954 File Offset: 0x00039B54
		public static void SetConceptTextLinks()
		{
			foreach (Concept concept in Concept.All)
			{
				MBTextManager.SetTextVariable(concept.LinkID, concept.EncyclopediaLinkWithName, false);
			}
		}
	}
}
