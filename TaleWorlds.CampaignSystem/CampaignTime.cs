using System;
using System.Collections.Generic;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem
{
	// Token: 0x0200006D RID: 109
	public struct CampaignTime : IComparable<CampaignTime>
	{
		// Token: 0x06000E74 RID: 3700 RVA: 0x000455F4 File Offset: 0x000437F4
		public static void AutoGeneratedStaticCollectObjectsCampaignTime(object o, List<object> collectedObjects)
		{
			((CampaignTime)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06000E75 RID: 3701 RVA: 0x00045610 File Offset: 0x00043810
		private void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
		}

		// Token: 0x06000E76 RID: 3702 RVA: 0x00045612 File Offset: 0x00043812
		internal static object AutoGeneratedGetMemberValue_numTicks(object o)
		{
			return ((CampaignTime)o)._numTicks;
		}

		// Token: 0x17000380 RID: 896
		// (get) Token: 0x06000E77 RID: 3703 RVA: 0x00045624 File Offset: 0x00043824
		internal long NumTicks
		{
			get
			{
				return this._numTicks;
			}
		}

		// Token: 0x06000E78 RID: 3704 RVA: 0x0004562C File Offset: 0x0004382C
		internal CampaignTime(long numTicks)
		{
			this._numTicks = numTicks;
		}

		// Token: 0x17000381 RID: 897
		// (get) Token: 0x06000E79 RID: 3705 RVA: 0x00045635 File Offset: 0x00043835
		private static long CurrentTicks
		{
			get
			{
				return Campaign.Current.MapTimeTracker.NumTicks;
			}
		}

		// Token: 0x17000382 RID: 898
		// (get) Token: 0x06000E7A RID: 3706 RVA: 0x00045646 File Offset: 0x00043846
		public static CampaignTime DeltaTime
		{
			get
			{
				return new CampaignTime(Campaign.Current.MapTimeTracker.DeltaTimeInTicks);
			}
		}

		// Token: 0x17000383 RID: 899
		// (get) Token: 0x06000E7B RID: 3707 RVA: 0x0004565C File Offset: 0x0004385C
		private static long DeltaTimeInTicks
		{
			get
			{
				return Campaign.Current.MapTimeTracker.DeltaTimeInTicks;
			}
		}

		// Token: 0x17000384 RID: 900
		// (get) Token: 0x06000E7C RID: 3708 RVA: 0x0004566D File Offset: 0x0004386D
		public static CampaignTime Now
		{
			get
			{
				return Campaign.Current.MapTimeTracker.Now;
			}
		}

		// Token: 0x17000385 RID: 901
		// (get) Token: 0x06000E7D RID: 3709 RVA: 0x0004567E File Offset: 0x0004387E
		public static CampaignTime Never
		{
			get
			{
				return new CampaignTime(long.MaxValue);
			}
		}

		// Token: 0x06000E7E RID: 3710 RVA: 0x0004568E File Offset: 0x0004388E
		public bool Equals(CampaignTime other)
		{
			return this._numTicks == other._numTicks;
		}

		// Token: 0x06000E7F RID: 3711 RVA: 0x0004569E File Offset: 0x0004389E
		public override bool Equals(object obj)
		{
			return obj != null && obj is CampaignTime && this.Equals((CampaignTime)obj);
		}

		// Token: 0x06000E80 RID: 3712 RVA: 0x000456BC File Offset: 0x000438BC
		public override int GetHashCode()
		{
			return this._numTicks.GetHashCode();
		}

		// Token: 0x06000E81 RID: 3713 RVA: 0x000456D7 File Offset: 0x000438D7
		public int CompareTo(CampaignTime other)
		{
			if (this._numTicks == other._numTicks)
			{
				return 0;
			}
			if (this._numTicks > other._numTicks)
			{
				return 1;
			}
			return -1;
		}

		// Token: 0x06000E82 RID: 3714 RVA: 0x000456FA File Offset: 0x000438FA
		public static bool operator <(CampaignTime x, CampaignTime y)
		{
			return x._numTicks < y._numTicks;
		}

		// Token: 0x06000E83 RID: 3715 RVA: 0x0004570A File Offset: 0x0004390A
		public static bool operator >(CampaignTime x, CampaignTime y)
		{
			return x._numTicks > y._numTicks;
		}

		// Token: 0x06000E84 RID: 3716 RVA: 0x0004571A File Offset: 0x0004391A
		public static bool operator ==(CampaignTime x, CampaignTime y)
		{
			return x._numTicks == y._numTicks;
		}

		// Token: 0x06000E85 RID: 3717 RVA: 0x0004572A File Offset: 0x0004392A
		public static bool operator !=(CampaignTime x, CampaignTime y)
		{
			return !(x == y);
		}

		// Token: 0x06000E86 RID: 3718 RVA: 0x00045736 File Offset: 0x00043936
		public static bool operator <=(CampaignTime x, CampaignTime y)
		{
			return x._numTicks <= y._numTicks;
		}

		// Token: 0x06000E87 RID: 3719 RVA: 0x00045749 File Offset: 0x00043949
		public static bool operator >=(CampaignTime x, CampaignTime y)
		{
			return x._numTicks >= y._numTicks;
		}

		// Token: 0x17000386 RID: 902
		// (get) Token: 0x06000E88 RID: 3720 RVA: 0x0004575C File Offset: 0x0004395C
		public bool IsFuture
		{
			get
			{
				return CampaignTime.CurrentTicks < this._numTicks;
			}
		}

		// Token: 0x17000387 RID: 903
		// (get) Token: 0x06000E89 RID: 3721 RVA: 0x0004576B File Offset: 0x0004396B
		public bool IsPast
		{
			get
			{
				return CampaignTime.CurrentTicks > this._numTicks;
			}
		}

		// Token: 0x17000388 RID: 904
		// (get) Token: 0x06000E8A RID: 3722 RVA: 0x0004577A File Offset: 0x0004397A
		public bool IsNow
		{
			get
			{
				return CampaignTime.CurrentTicks == this._numTicks;
			}
		}

		// Token: 0x17000389 RID: 905
		// (get) Token: 0x06000E8B RID: 3723 RVA: 0x0004578C File Offset: 0x0004398C
		public bool IsDayTime
		{
			get
			{
				int num = MathF.Floor(this.CurrentHourInDay);
				return num >= 2 && num < 22;
			}
		}

		// Token: 0x1700038A RID: 906
		// (get) Token: 0x06000E8C RID: 3724 RVA: 0x000457B0 File Offset: 0x000439B0
		public float CurrentHourInDay
		{
			get
			{
				return (float)(this._numTicks % 864000000L / 10000L) / 3600f;
			}
		}

		// Token: 0x1700038B RID: 907
		// (get) Token: 0x06000E8D RID: 3725 RVA: 0x000457CD File Offset: 0x000439CD
		public bool IsNightTime
		{
			get
			{
				return !this.IsDayTime;
			}
		}

		// Token: 0x1700038C RID: 908
		// (get) Token: 0x06000E8E RID: 3726 RVA: 0x000457D8 File Offset: 0x000439D8
		public float ElapsedMillisecondsUntilNow
		{
			get
			{
				return (float)(CampaignTime.CurrentTicks - this._numTicks) / 10f;
			}
		}

		// Token: 0x1700038D RID: 909
		// (get) Token: 0x06000E8F RID: 3727 RVA: 0x000457ED File Offset: 0x000439ED
		public float ElapsedSecondsUntilNow
		{
			get
			{
				return (float)(CampaignTime.CurrentTicks - this._numTicks) / 10000f;
			}
		}

		// Token: 0x1700038E RID: 910
		// (get) Token: 0x06000E90 RID: 3728 RVA: 0x00045802 File Offset: 0x00043A02
		public float ElapsedHoursUntilNow
		{
			get
			{
				return (float)(CampaignTime.CurrentTicks - this._numTicks) / 36000000f;
			}
		}

		// Token: 0x1700038F RID: 911
		// (get) Token: 0x06000E91 RID: 3729 RVA: 0x00045817 File Offset: 0x00043A17
		public float ElapsedDaysUntilNow
		{
			get
			{
				return (float)(CampaignTime.CurrentTicks - this._numTicks) / 864000000f;
			}
		}

		// Token: 0x17000390 RID: 912
		// (get) Token: 0x06000E92 RID: 3730 RVA: 0x0004582C File Offset: 0x00043A2C
		public float ElapsedWeeksUntilNow
		{
			get
			{
				return (float)(CampaignTime.CurrentTicks - this._numTicks) / 6.048E+09f;
			}
		}

		// Token: 0x17000391 RID: 913
		// (get) Token: 0x06000E93 RID: 3731 RVA: 0x00045841 File Offset: 0x00043A41
		public float ElapsedSeasonsUntilNow
		{
			get
			{
				return (float)(CampaignTime.CurrentTicks - this._numTicks) / 1.8144E+10f;
			}
		}

		// Token: 0x17000392 RID: 914
		// (get) Token: 0x06000E94 RID: 3732 RVA: 0x00045856 File Offset: 0x00043A56
		public float ElapsedYearsUntilNow
		{
			get
			{
				return (float)(CampaignTime.CurrentTicks - this._numTicks) / 7.2576E+10f;
			}
		}

		// Token: 0x17000393 RID: 915
		// (get) Token: 0x06000E95 RID: 3733 RVA: 0x0004586B File Offset: 0x00043A6B
		public float RemainingMillisecondsFromNow
		{
			get
			{
				return (float)(this._numTicks - CampaignTime.CurrentTicks) / 10f;
			}
		}

		// Token: 0x17000394 RID: 916
		// (get) Token: 0x06000E96 RID: 3734 RVA: 0x00045880 File Offset: 0x00043A80
		public float RemainingSecondsFromNow
		{
			get
			{
				return (float)(this._numTicks - CampaignTime.CurrentTicks) / 10000f;
			}
		}

		// Token: 0x17000395 RID: 917
		// (get) Token: 0x06000E97 RID: 3735 RVA: 0x00045895 File Offset: 0x00043A95
		public float RemainingHoursFromNow
		{
			get
			{
				return (float)(this._numTicks - CampaignTime.CurrentTicks) / 36000000f;
			}
		}

		// Token: 0x17000396 RID: 918
		// (get) Token: 0x06000E98 RID: 3736 RVA: 0x000458AA File Offset: 0x00043AAA
		public float RemainingDaysFromNow
		{
			get
			{
				return (float)(this._numTicks - CampaignTime.CurrentTicks) / 864000000f;
			}
		}

		// Token: 0x17000397 RID: 919
		// (get) Token: 0x06000E99 RID: 3737 RVA: 0x000458BF File Offset: 0x00043ABF
		public float RemainingWeeksFromNow
		{
			get
			{
				return (float)(this._numTicks - CampaignTime.CurrentTicks) / 6.048E+09f;
			}
		}

		// Token: 0x17000398 RID: 920
		// (get) Token: 0x06000E9A RID: 3738 RVA: 0x000458D4 File Offset: 0x00043AD4
		public float RemainingSeasonsFromNow
		{
			get
			{
				return (float)(this._numTicks - CampaignTime.CurrentTicks) / 1.8144E+10f;
			}
		}

		// Token: 0x17000399 RID: 921
		// (get) Token: 0x06000E9B RID: 3739 RVA: 0x000458E9 File Offset: 0x00043AE9
		public float RemainingYearsFromNow
		{
			get
			{
				return (float)(this._numTicks - CampaignTime.CurrentTicks) / 7.2576E+10f;
			}
		}

		// Token: 0x1700039A RID: 922
		// (get) Token: 0x06000E9C RID: 3740 RVA: 0x000458FE File Offset: 0x00043AFE
		public double ToMilliseconds
		{
			get
			{
				return (double)this._numTicks / 10.0;
			}
		}

		// Token: 0x1700039B RID: 923
		// (get) Token: 0x06000E9D RID: 3741 RVA: 0x00045911 File Offset: 0x00043B11
		public double ToSeconds
		{
			get
			{
				return (double)this._numTicks / 10000.0;
			}
		}

		// Token: 0x1700039C RID: 924
		// (get) Token: 0x06000E9E RID: 3742 RVA: 0x00045924 File Offset: 0x00043B24
		public double ToMinutes
		{
			get
			{
				return (double)this._numTicks / 600000.0;
			}
		}

		// Token: 0x1700039D RID: 925
		// (get) Token: 0x06000E9F RID: 3743 RVA: 0x00045937 File Offset: 0x00043B37
		public double ToHours
		{
			get
			{
				return (double)this._numTicks / 36000000.0;
			}
		}

		// Token: 0x1700039E RID: 926
		// (get) Token: 0x06000EA0 RID: 3744 RVA: 0x0004594A File Offset: 0x00043B4A
		public double ToDays
		{
			get
			{
				return (double)this._numTicks / 864000000.0;
			}
		}

		// Token: 0x1700039F RID: 927
		// (get) Token: 0x06000EA1 RID: 3745 RVA: 0x0004595D File Offset: 0x00043B5D
		public double ToWeeks
		{
			get
			{
				return (double)this._numTicks / 6048000000.0;
			}
		}

		// Token: 0x170003A0 RID: 928
		// (get) Token: 0x06000EA2 RID: 3746 RVA: 0x00045970 File Offset: 0x00043B70
		public double ToSeasons
		{
			get
			{
				return (double)this._numTicks / 18144000000.0;
			}
		}

		// Token: 0x170003A1 RID: 929
		// (get) Token: 0x06000EA3 RID: 3747 RVA: 0x00045983 File Offset: 0x00043B83
		public double ToYears
		{
			get
			{
				return (double)this._numTicks / 72576000000.0;
			}
		}

		// Token: 0x170003A2 RID: 930
		// (get) Token: 0x06000EA4 RID: 3748 RVA: 0x00045996 File Offset: 0x00043B96
		public int GetHourOfDay
		{
			get
			{
				return (int)(this._numTicks / 36000000L % 24L);
			}
		}

		// Token: 0x170003A3 RID: 931
		// (get) Token: 0x06000EA5 RID: 3749 RVA: 0x000459AA File Offset: 0x00043BAA
		public int GetDayOfWeek
		{
			get
			{
				return (int)(this._numTicks / 864000000L % 7L);
			}
		}

		// Token: 0x170003A4 RID: 932
		// (get) Token: 0x06000EA6 RID: 3750 RVA: 0x000459BD File Offset: 0x00043BBD
		public int GetDayOfSeason
		{
			get
			{
				return (int)(this._numTicks / 864000000L % 21L);
			}
		}

		// Token: 0x170003A5 RID: 933
		// (get) Token: 0x06000EA7 RID: 3751 RVA: 0x000459D1 File Offset: 0x00043BD1
		public int GetDayOfYear
		{
			get
			{
				return (int)(this._numTicks / 864000000L % 84L);
			}
		}

		// Token: 0x170003A6 RID: 934
		// (get) Token: 0x06000EA8 RID: 3752 RVA: 0x000459E5 File Offset: 0x00043BE5
		public int GetWeekOfSeason
		{
			get
			{
				return (int)(this._numTicks / 6048000000L % 3L);
			}
		}

		// Token: 0x170003A7 RID: 935
		// (get) Token: 0x06000EA9 RID: 3753 RVA: 0x000459FB File Offset: 0x00043BFB
		public CampaignTime.Seasons GetSeasonOfYear
		{
			get
			{
				return (CampaignTime.Seasons)(this._numTicks / 18144000000L % 4L);
			}
		}

		// Token: 0x170003A8 RID: 936
		// (get) Token: 0x06000EAA RID: 3754 RVA: 0x00045A11 File Offset: 0x00043C11
		public int GetYear
		{
			get
			{
				return (int)(this._numTicks / 72576000000L);
			}
		}

		// Token: 0x06000EAB RID: 3755 RVA: 0x00045A24 File Offset: 0x00043C24
		public static CampaignTime Milliseconds(long valueInMilliseconds)
		{
			return new CampaignTime(valueInMilliseconds * 10L);
		}

		// Token: 0x06000EAC RID: 3756 RVA: 0x00045A30 File Offset: 0x00043C30
		public static CampaignTime MillisecondsFromNow(long valueInMilliseconds)
		{
			return new CampaignTime(CampaignTime.CurrentTicks + valueInMilliseconds * 10L);
		}

		// Token: 0x06000EAD RID: 3757 RVA: 0x00045A42 File Offset: 0x00043C42
		public static CampaignTime Seconds(long valueInSeconds)
		{
			return new CampaignTime(valueInSeconds * 10000L);
		}

		// Token: 0x06000EAE RID: 3758 RVA: 0x00045A51 File Offset: 0x00043C51
		public static CampaignTime SecondsFromNow(long valueInSeconds)
		{
			return new CampaignTime(CampaignTime.CurrentTicks + valueInSeconds * 10000L);
		}

		// Token: 0x06000EAF RID: 3759 RVA: 0x00045A66 File Offset: 0x00043C66
		public static CampaignTime Minutes(long valueInMinutes)
		{
			return new CampaignTime(valueInMinutes * 600000L);
		}

		// Token: 0x06000EB0 RID: 3760 RVA: 0x00045A75 File Offset: 0x00043C75
		public static CampaignTime MinutesFromNow(long valueInMinutes)
		{
			return new CampaignTime(CampaignTime.CurrentTicks + valueInMinutes * 600000L);
		}

		// Token: 0x06000EB1 RID: 3761 RVA: 0x00045A8A File Offset: 0x00043C8A
		public static CampaignTime Hours(float valueInHours)
		{
			return new CampaignTime((long)(valueInHours * 36000000f));
		}

		// Token: 0x06000EB2 RID: 3762 RVA: 0x00045A99 File Offset: 0x00043C99
		public static CampaignTime HoursFromNow(float valueInHours)
		{
			return new CampaignTime(CampaignTime.CurrentTicks + (long)(valueInHours * 36000000f));
		}

		// Token: 0x06000EB3 RID: 3763 RVA: 0x00045AAE File Offset: 0x00043CAE
		public static CampaignTime Days(float valueInDays)
		{
			return new CampaignTime((long)(valueInDays * 864000000f));
		}

		// Token: 0x06000EB4 RID: 3764 RVA: 0x00045ABD File Offset: 0x00043CBD
		public static CampaignTime DaysFromNow(float valueInDays)
		{
			return new CampaignTime(CampaignTime.CurrentTicks + (long)(valueInDays * 864000000f));
		}

		// Token: 0x06000EB5 RID: 3765 RVA: 0x00045AD2 File Offset: 0x00043CD2
		public static CampaignTime Weeks(float valueInWeeeks)
		{
			return new CampaignTime((long)(valueInWeeeks * 6.048E+09f));
		}

		// Token: 0x06000EB6 RID: 3766 RVA: 0x00045AE1 File Offset: 0x00043CE1
		public static CampaignTime WeeksFromNow(float valueInWeeks)
		{
			return new CampaignTime(CampaignTime.CurrentTicks + (long)(valueInWeeks * 6.048E+09f));
		}

		// Token: 0x06000EB7 RID: 3767 RVA: 0x00045AF6 File Offset: 0x00043CF6
		public static CampaignTime Years(float valueInYears)
		{
			return new CampaignTime((long)(valueInYears * 7.2576E+10f));
		}

		// Token: 0x06000EB8 RID: 3768 RVA: 0x00045B05 File Offset: 0x00043D05
		public static CampaignTime YearsFromNow(float valueInYears)
		{
			return new CampaignTime(CampaignTime.CurrentTicks + (long)(valueInYears * 7.2576E+10f));
		}

		// Token: 0x170003A9 RID: 937
		// (get) Token: 0x06000EB9 RID: 3769 RVA: 0x00045B1A File Offset: 0x00043D1A
		public static CampaignTime Zero
		{
			get
			{
				return new CampaignTime(0L);
			}
		}

		// Token: 0x06000EBA RID: 3770 RVA: 0x00045B23 File Offset: 0x00043D23
		public static CampaignTime operator +(CampaignTime g1, CampaignTime g2)
		{
			return new CampaignTime(g1._numTicks + g2._numTicks);
		}

		// Token: 0x06000EBB RID: 3771 RVA: 0x00045B37 File Offset: 0x00043D37
		public static CampaignTime operator -(CampaignTime g1, CampaignTime g2)
		{
			return new CampaignTime(g1._numTicks - g2._numTicks);
		}

		// Token: 0x06000EBC RID: 3772 RVA: 0x00045B4B File Offset: 0x00043D4B
		public bool StringSameAs(CampaignTime otherTime)
		{
			return this._numTicks / 864000000L == otherTime.NumTicks / 864000000L;
		}

		// Token: 0x06000EBD RID: 3773 RVA: 0x00045B6C File Offset: 0x00043D6C
		public override string ToString()
		{
			int getYear = this.GetYear;
			CampaignTime.Seasons getSeasonOfYear = this.GetSeasonOfYear;
			int num = this.GetDayOfSeason + 1;
			TextObject textObject = GameTexts.FindText("str_date_format", null);
			textObject.SetTextVariable("SEASON", GameTexts.FindText("str_season_" + getSeasonOfYear, null));
			textObject.SetTextVariable("YEAR", getYear.ToString());
			textObject.SetTextVariable("DAY", num.ToString());
			return textObject.ToString();
		}

		// Token: 0x04000428 RID: 1064
		public const int SunRise = 2;

		// Token: 0x04000429 RID: 1065
		public const int SunSet = 22;

		// Token: 0x0400042A RID: 1066
		public const int MinutesInHour = 60;

		// Token: 0x0400042B RID: 1067
		public const int HoursInDay = 24;

		// Token: 0x0400042C RID: 1068
		public const int DaysInWeek = 7;

		// Token: 0x0400042D RID: 1069
		public const int WeeksInSeason = 3;

		// Token: 0x0400042E RID: 1070
		public const int SeasonsInYear = 4;

		// Token: 0x0400042F RID: 1071
		public const int DaysInSeason = 21;

		// Token: 0x04000430 RID: 1072
		public const int DaysInYear = 84;

		// Token: 0x04000431 RID: 1073
		internal const long TimeTicksPerMillisecond = 10L;

		// Token: 0x04000432 RID: 1074
		internal const long TimeTicksPerSecond = 10000L;

		// Token: 0x04000433 RID: 1075
		internal const long TimeTicksPerMinute = 600000L;

		// Token: 0x04000434 RID: 1076
		internal const long TimeTicksPerHour = 36000000L;

		// Token: 0x04000435 RID: 1077
		internal const long TimeTicksPerDay = 864000000L;

		// Token: 0x04000436 RID: 1078
		internal const long TimeTicksPerWeek = 6048000000L;

		// Token: 0x04000437 RID: 1079
		internal const long TimeTicksPerSeason = 18144000000L;

		// Token: 0x04000438 RID: 1080
		internal const long TimeTicksPerYear = 72576000000L;

		// Token: 0x04000439 RID: 1081
		[SaveableField(2)]
		private readonly long _numTicks;

		// Token: 0x020004BF RID: 1215
		public enum Seasons
		{
			// Token: 0x0400148D RID: 5261
			Spring,
			// Token: 0x0400148E RID: 5262
			Summer,
			// Token: 0x0400148F RID: 5263
			Autumn,
			// Token: 0x04001490 RID: 5264
			Winter
		}
	}
}
