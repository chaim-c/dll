using System;
using System.Collections.Generic;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.ObjectSystem;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Roster
{
	// Token: 0x0200028D RID: 653
	public struct TroopRosterElement : ISerializableObject, ISavedStruct
	{
		// Token: 0x0600238E RID: 9102 RVA: 0x00096A18 File Offset: 0x00094C18
		public static void AutoGeneratedStaticCollectObjectsTroopRosterElement(object o, List<object> collectedObjects)
		{
			((TroopRosterElement)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x0600238F RID: 9103 RVA: 0x00096A34 File Offset: 0x00094C34
		private void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			collectedObjects.Add(this.Character);
		}

		// Token: 0x06002390 RID: 9104 RVA: 0x00096A44 File Offset: 0x00094C44
		internal static object AutoGeneratedGetMemberValueDeltaXp(object o)
		{
			return ((TroopRosterElement)o).DeltaXp;
		}

		// Token: 0x06002391 RID: 9105 RVA: 0x00096A64 File Offset: 0x00094C64
		internal static object AutoGeneratedGetMemberValueCharacter(object o)
		{
			return ((TroopRosterElement)o).Character;
		}

		// Token: 0x06002392 RID: 9106 RVA: 0x00096A71 File Offset: 0x00094C71
		internal static object AutoGeneratedGetMemberValue_number(object o)
		{
			return ((TroopRosterElement)o)._number;
		}

		// Token: 0x06002393 RID: 9107 RVA: 0x00096A83 File Offset: 0x00094C83
		internal static object AutoGeneratedGetMemberValue_woundedNumber(object o)
		{
			return ((TroopRosterElement)o)._woundedNumber;
		}

		// Token: 0x06002394 RID: 9108 RVA: 0x00096A95 File Offset: 0x00094C95
		internal static object AutoGeneratedGetMemberValue_xp(object o)
		{
			return ((TroopRosterElement)o)._xp;
		}

		// Token: 0x170008DC RID: 2268
		// (get) Token: 0x06002395 RID: 9109 RVA: 0x00096AA7 File Offset: 0x00094CA7
		public static TroopRosterElement Invalid
		{
			get
			{
				return TroopRosterElement.StaticInvalidElement;
			}
		}

		// Token: 0x170008DD RID: 2269
		// (get) Token: 0x06002396 RID: 9110 RVA: 0x00096AAE File Offset: 0x00094CAE
		// (set) Token: 0x06002397 RID: 9111 RVA: 0x00096AB6 File Offset: 0x00094CB6
		public int Number
		{
			get
			{
				return this._number;
			}
			set
			{
				if (value < 0)
				{
					throw new MBUnderFlowException("ItemRosterElement::Character");
				}
				this._number = value;
			}
		}

		// Token: 0x170008DE RID: 2270
		// (get) Token: 0x06002398 RID: 9112 RVA: 0x00096ACE File Offset: 0x00094CCE
		// (set) Token: 0x06002399 RID: 9113 RVA: 0x00096AF9 File Offset: 0x00094CF9
		public int WoundedNumber
		{
			get
			{
				if (!this.Character.IsHero)
				{
					return this._woundedNumber;
				}
				if (!this.Character.HeroObject.IsWounded)
				{
					return 0;
				}
				return 1;
			}
			set
			{
				if (value < 0)
				{
					throw new MBUnderFlowException("ItemRosterElement::WoundedNumber");
				}
				this._woundedNumber = value;
			}
		}

		// Token: 0x170008DF RID: 2271
		// (get) Token: 0x0600239A RID: 9114 RVA: 0x00096B11 File Offset: 0x00094D11
		// (set) Token: 0x0600239B RID: 9115 RVA: 0x00096B19 File Offset: 0x00094D19
		public int Xp
		{
			get
			{
				return this._xp;
			}
			set
			{
				if (value < 0)
				{
					Debug.FailedAssert("false", "C:\\Develop\\MB3\\Source\\Bannerlord\\TaleWorlds.CampaignSystem\\Roster\\TroopRosterElement.cs", "Xp", 77);
					this._xp = 0;
					return;
				}
				this._xp = value;
			}
		}

		// Token: 0x170008E0 RID: 2272
		// (get) Token: 0x0600239C RID: 9116 RVA: 0x00096B44 File Offset: 0x00094D44
		// (set) Token: 0x0600239D RID: 9117 RVA: 0x00096B4C File Offset: 0x00094D4C
		[SaveableProperty(5)]
		public int DeltaXp { get; internal set; }

		// Token: 0x0600239E RID: 9118 RVA: 0x00096B55 File Offset: 0x00094D55
		public TroopRosterElement(CharacterObject character)
		{
			this.Character = character;
			this._number = 0;
			this._woundedNumber = 0;
			this._xp = 0;
			this.DeltaXp = 0;
		}

		// Token: 0x0600239F RID: 9119 RVA: 0x00096B7A File Offset: 0x00094D7A
		internal void Clear()
		{
			this.Character = null;
			this._number = 0;
		}

		// Token: 0x060023A0 RID: 9120 RVA: 0x00096B8C File Offset: 0x00094D8C
		void ISerializableObject.SerializeTo(IWriter writer)
		{
			writer.WriteUInt((this.Character != null) ? this.Character.Id.InternalValue : 0U);
			writer.WriteInt(this._number);
			writer.WriteInt(this._woundedNumber);
			writer.WriteInt(this._xp);
		}

		// Token: 0x060023A1 RID: 9121 RVA: 0x00096BE4 File Offset: 0x00094DE4
		void ISerializableObject.DeserializeFrom(IReader reader)
		{
			uint num = reader.ReadUInt();
			this.Character = null;
			if (num != 0U)
			{
				MBGUID objectId = new MBGUID(num);
				this.Character = (MBObjectManager.Instance.GetObject(objectId) as CharacterObject);
			}
			this._number = reader.ReadInt();
			this._woundedNumber = reader.ReadInt();
		}

		// Token: 0x060023A2 RID: 9122 RVA: 0x00096C38 File Offset: 0x00094E38
		public override string ToString()
		{
			string str = this.Number.ToString();
			string str2 = " ";
			CharacterObject character = this.Character;
			return str + str2 + ((character != null) ? character.ToString() : null);
		}

		// Token: 0x060023A3 RID: 9123 RVA: 0x00096C70 File Offset: 0x00094E70
		public override bool Equals(object obj)
		{
			if (obj is TroopRosterElement)
			{
				TroopRosterElement other = (TroopRosterElement)obj;
				return this.Equals(other);
			}
			return false;
		}

		// Token: 0x060023A4 RID: 9124 RVA: 0x00096C99 File Offset: 0x00094E99
		public bool Equals(TroopRosterElement other)
		{
			return this.Character == other.Character;
		}

		// Token: 0x060023A5 RID: 9125 RVA: 0x00096CA9 File Offset: 0x00094EA9
		public override int GetHashCode()
		{
			if (this.Character == null)
			{
				return 0;
			}
			return this.Character.GetHashCode();
		}

		// Token: 0x060023A6 RID: 9126 RVA: 0x00096CC0 File Offset: 0x00094EC0
		bool ISavedStruct.IsDefault()
		{
			return this.Character == null && this._number == 0 && this._woundedNumber == 0 && this._xp == 0 && this.DeltaXp == 0;
		}

		// Token: 0x04000AC8 RID: 2760
		private static readonly TroopRosterElement StaticInvalidElement = new TroopRosterElement(null);

		// Token: 0x04000AC9 RID: 2761
		[SaveableField(0)]
		private int _number;

		// Token: 0x04000ACA RID: 2762
		[SaveableField(1)]
		private int _woundedNumber;

		// Token: 0x04000ACB RID: 2763
		[SaveableField(2)]
		private int _xp;

		// Token: 0x04000ACC RID: 2764
		[SaveableField(4)]
		public CharacterObject Character;
	}
}
