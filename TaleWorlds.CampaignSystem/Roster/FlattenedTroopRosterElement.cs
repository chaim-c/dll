using System;
using System.Collections.Generic;
using TaleWorlds.Core;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Roster
{
	// Token: 0x0200028C RID: 652
	public struct FlattenedTroopRosterElement : ISavedStruct
	{
		// Token: 0x06002375 RID: 9077 RVA: 0x000967D8 File Offset: 0x000949D8
		public static void AutoGeneratedStaticCollectObjectsFlattenedTroopRosterElement(object o, List<object> collectedObjects)
		{
			((FlattenedTroopRosterElement)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06002376 RID: 9078 RVA: 0x000967F4 File Offset: 0x000949F4
		private void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			collectedObjects.Add(this._troop);
			UniqueTroopDescriptor.AutoGeneratedStaticCollectObjectsUniqueTroopDescriptor(this._uniqueNo, collectedObjects);
		}

		// Token: 0x06002377 RID: 9079 RVA: 0x00096814 File Offset: 0x00094A14
		internal static object AutoGeneratedGetMemberValueState(object o)
		{
			return ((FlattenedTroopRosterElement)o).State;
		}

		// Token: 0x06002378 RID: 9080 RVA: 0x00096834 File Offset: 0x00094A34
		internal static object AutoGeneratedGetMemberValue_troop(object o)
		{
			return ((FlattenedTroopRosterElement)o)._troop;
		}

		// Token: 0x06002379 RID: 9081 RVA: 0x00096841 File Offset: 0x00094A41
		internal static object AutoGeneratedGetMemberValue_xp(object o)
		{
			return ((FlattenedTroopRosterElement)o)._xp;
		}

		// Token: 0x0600237A RID: 9082 RVA: 0x00096853 File Offset: 0x00094A53
		internal static object AutoGeneratedGetMemberValue_xpGain(object o)
		{
			return ((FlattenedTroopRosterElement)o)._xpGain;
		}

		// Token: 0x0600237B RID: 9083 RVA: 0x00096865 File Offset: 0x00094A65
		internal static object AutoGeneratedGetMemberValue_uniqueNo(object o)
		{
			return ((FlattenedTroopRosterElement)o)._uniqueNo;
		}

		// Token: 0x170008D4 RID: 2260
		// (get) Token: 0x0600237C RID: 9084 RVA: 0x00096877 File Offset: 0x00094A77
		// (set) Token: 0x0600237D RID: 9085 RVA: 0x0009687F File Offset: 0x00094A7F
		[SaveableProperty(5)]
		public RosterTroopState State { get; private set; }

		// Token: 0x0600237E RID: 9086 RVA: 0x00096888 File Offset: 0x00094A88
		public FlattenedTroopRosterElement(CharacterObject troop, RosterTroopState state = RosterTroopState.Active, int xp = 0, UniqueTroopDescriptor uniqueNo = default(UniqueTroopDescriptor), int xpGain = 0)
		{
			this = default(FlattenedTroopRosterElement);
			this._troop = troop;
			this._xp = xp;
			this._xpGain = xpGain;
			this.State = state;
			this._uniqueNo = ((!uniqueNo.IsValid) ? new UniqueTroopDescriptor(Game.Current.NextUniqueTroopSeed) : uniqueNo);
		}

		// Token: 0x0600237F RID: 9087 RVA: 0x000968DB File Offset: 0x00094ADB
		public FlattenedTroopRosterElement(FlattenedTroopRosterElement rosterElement, RosterTroopState state)
		{
			this = new FlattenedTroopRosterElement(rosterElement);
			this.State = state;
		}

		// Token: 0x06002380 RID: 9088 RVA: 0x000968EC File Offset: 0x00094AEC
		private FlattenedTroopRosterElement(FlattenedTroopRosterElement rosterElement)
		{
			this = default(FlattenedTroopRosterElement);
			this._troop = rosterElement._troop;
			this._xp = rosterElement._xp;
			this._xpGain = rosterElement._xpGain;
			this._uniqueNo = rosterElement._uniqueNo;
			this.State = rosterElement.State;
		}

		// Token: 0x170008D5 RID: 2261
		// (get) Token: 0x06002381 RID: 9089 RVA: 0x0009693D File Offset: 0x00094B3D
		public CharacterObject Troop
		{
			get
			{
				return this._troop;
			}
		}

		// Token: 0x170008D6 RID: 2262
		// (get) Token: 0x06002382 RID: 9090 RVA: 0x00096945 File Offset: 0x00094B45
		// (set) Token: 0x06002383 RID: 9091 RVA: 0x00096979 File Offset: 0x00094B79
		public bool IsWounded
		{
			get
			{
				if (this.Troop.IsHero)
				{
					return this.Troop.HeroObject.IsWounded;
				}
				return this.State == RosterTroopState.Wounded || this.State == RosterTroopState.WoundedInThisBattle;
			}
			set
			{
				this.State = (value ? RosterTroopState.Wounded : RosterTroopState.Active);
			}
		}

		// Token: 0x170008D7 RID: 2263
		// (get) Token: 0x06002384 RID: 9092 RVA: 0x00096988 File Offset: 0x00094B88
		// (set) Token: 0x06002385 RID: 9093 RVA: 0x00096993 File Offset: 0x00094B93
		public bool IsRouted
		{
			get
			{
				return this.State == RosterTroopState.Routed;
			}
			set
			{
				this.State = (value ? RosterTroopState.Routed : RosterTroopState.Active);
			}
		}

		// Token: 0x170008D8 RID: 2264
		// (get) Token: 0x06002386 RID: 9094 RVA: 0x000969A2 File Offset: 0x00094BA2
		// (set) Token: 0x06002387 RID: 9095 RVA: 0x000969AD File Offset: 0x00094BAD
		public bool IsKilled
		{
			get
			{
				return this.State == RosterTroopState.Killed;
			}
			set
			{
				this.State = (value ? RosterTroopState.Killed : RosterTroopState.Active);
			}
		}

		// Token: 0x170008D9 RID: 2265
		// (get) Token: 0x06002388 RID: 9096 RVA: 0x000969BC File Offset: 0x00094BBC
		public int Xp
		{
			get
			{
				return this._xp;
			}
		}

		// Token: 0x170008DA RID: 2266
		// (get) Token: 0x06002389 RID: 9097 RVA: 0x000969C4 File Offset: 0x00094BC4
		public int XpGained
		{
			get
			{
				return this._xpGain;
			}
		}

		// Token: 0x170008DB RID: 2267
		// (get) Token: 0x0600238A RID: 9098 RVA: 0x000969CC File Offset: 0x00094BCC
		public UniqueTroopDescriptor Descriptor
		{
			get
			{
				return this._uniqueNo;
			}
		}

		// Token: 0x0600238B RID: 9099 RVA: 0x000969D4 File Offset: 0x00094BD4
		public override string ToString()
		{
			return this.Troop.ToString();
		}

		// Token: 0x0600238C RID: 9100 RVA: 0x000969E1 File Offset: 0x00094BE1
		bool ISavedStruct.IsDefault()
		{
			return this._troop == null && this._xp == 0 && this._xpGain == 0 && this.State == RosterTroopState.Active && this._uniqueNo == UniqueTroopDescriptor.Invalid;
		}

		// Token: 0x04000AC2 RID: 2754
		public static readonly FlattenedTroopRosterElement DefaultFlattenedTroopRosterElement;

		// Token: 0x04000AC3 RID: 2755
		[SaveableField(0)]
		private readonly CharacterObject _troop;

		// Token: 0x04000AC4 RID: 2756
		[SaveableField(1)]
		private readonly int _xp;

		// Token: 0x04000AC5 RID: 2757
		[SaveableField(3)]
		private readonly int _xpGain;

		// Token: 0x04000AC6 RID: 2758
		[SaveableField(4)]
		private readonly UniqueTroopDescriptor _uniqueNo;
	}
}
