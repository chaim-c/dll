using System;
using System.Collections.Generic;
using TaleWorlds.CampaignSystem.GameMenus;
using TaleWorlds.CampaignSystem.Roster;
using TaleWorlds.CampaignSystem.Settlements;
using TaleWorlds.Core;
using TaleWorlds.ObjectSystem;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.GameState
{
	// Token: 0x02000329 RID: 809
	public class MenuContext : MBObjectBase
	{
		// Token: 0x06002E41 RID: 11841 RVA: 0x000C1995 File Offset: 0x000BFB95
		internal static void AutoGeneratedStaticCollectObjectsMenuContext(object o, List<object> collectedObjects)
		{
			((MenuContext)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06002E42 RID: 11842 RVA: 0x000C19A3 File Offset: 0x000BFBA3
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06002E43 RID: 11843 RVA: 0x000C19AC File Offset: 0x000BFBAC
		internal static object AutoGeneratedGetMemberValue_currentState(object o)
		{
			return ((MenuContext)o)._currentState;
		}

		// Token: 0x17000B13 RID: 2835
		// (get) Token: 0x06002E44 RID: 11844 RVA: 0x000C19BE File Offset: 0x000BFBBE
		// (set) Token: 0x06002E45 RID: 11845 RVA: 0x000C19C6 File Offset: 0x000BFBC6
		public GameMenu GameMenu { get; private set; }

		// Token: 0x17000B14 RID: 2836
		// (get) Token: 0x06002E46 RID: 11846 RVA: 0x000C19CF File Offset: 0x000BFBCF
		// (set) Token: 0x06002E47 RID: 11847 RVA: 0x000C19D7 File Offset: 0x000BFBD7
		public IMenuContextHandler Handler { get; set; }

		// Token: 0x17000B15 RID: 2837
		// (get) Token: 0x06002E48 RID: 11848 RVA: 0x000C19E0 File Offset: 0x000BFBE0
		// (set) Token: 0x06002E49 RID: 11849 RVA: 0x000C19E8 File Offset: 0x000BFBE8
		public string CurrentBackgroundMeshName { get; private set; }

		// Token: 0x17000B16 RID: 2838
		// (get) Token: 0x06002E4A RID: 11850 RVA: 0x000C19F1 File Offset: 0x000BFBF1
		// (set) Token: 0x06002E4B RID: 11851 RVA: 0x000C19F9 File Offset: 0x000BFBF9
		public string CurrentAmbientSoundID { get; private set; }

		// Token: 0x17000B17 RID: 2839
		// (get) Token: 0x06002E4C RID: 11852 RVA: 0x000C1A02 File Offset: 0x000BFC02
		// (set) Token: 0x06002E4D RID: 11853 RVA: 0x000C1A0A File Offset: 0x000BFC0A
		public string CurrentPanelSoundID { get; private set; }

		// Token: 0x06002E4E RID: 11854 RVA: 0x000C1A13 File Offset: 0x000BFC13
		public void Refresh()
		{
			this._currentState = MenuContext.MenuContextState.RequiresCreation;
			this.HandleStates();
		}

		// Token: 0x06002E4F RID: 11855 RVA: 0x000C1A22 File Offset: 0x000BFC22
		public void SwitchToMenu(string menuId)
		{
			Campaign.Current.GameMenuManager.SetNextMenu(menuId);
			this.HandleStates();
		}

		// Token: 0x06002E50 RID: 11856 RVA: 0x000C1A3C File Offset: 0x000BFC3C
		private void HandleStates()
		{
			if (this._currentState != MenuContext.MenuContextState.Finalized)
			{
				if (!string.IsNullOrEmpty(Campaign.Current.GameMenuManager.NextGameMenuId))
				{
					this._currentState = MenuContext.MenuContextState.RequiresCreation;
				}
				while (this._currentState == MenuContext.MenuContextState.RequiresCreation)
				{
					if (this.GameMenu != null)
					{
						this.GameMenu.PreInit(this);
					}
					if (Campaign.Current.GameMenuManager.NextGameMenuId != null)
					{
						this.GameMenu = Campaign.Current.GameMenuManager.NextMenu;
						Campaign.Current.GameMenuManager.SetNextMenu(null);
						MapState mapState = Game.Current.GameStateManager.LastOrDefault<MapState>();
						if (mapState != null)
						{
							mapState.GameMenuId = this.GameMenu.StringId;
						}
					}
					if (this.GameMenu.AutoSelectFirst)
					{
						Campaign.Current.GameMenuManager.RunConsequenceOfVirtualMenuOption(this, 0);
					}
					this.GameMenu.RunOnInit(Game.Current, this);
					if (string.IsNullOrEmpty(Campaign.Current.GameMenuManager.NextGameMenuId) && this._currentState != MenuContext.MenuContextState.Finalized)
					{
						this._currentState = MenuContext.MenuContextState.RequiresInitialization;
					}
				}
				if (this._currentState == MenuContext.MenuContextState.RequiresInitialization)
				{
					this._currentState = MenuContext.MenuContextState.None;
					if (this.Handler != null)
					{
						this.Handler.OnMenuCreate();
					}
					Campaign.Current.GameMenuCallbackManager.InitializeState(this.GameMenu.StringId, this);
					if (this.Handler != null)
					{
						this.Handler.OnMenuActivate();
					}
				}
			}
		}

		// Token: 0x06002E51 RID: 11857 RVA: 0x000C1BA0 File Offset: 0x000BFDA0
		public void Destroy()
		{
			this._currentState = MenuContext.MenuContextState.Finalized;
		}

		// Token: 0x06002E52 RID: 11858 RVA: 0x000C1BA9 File Offset: 0x000BFDA9
		public void OnTick(float dt)
		{
			Campaign.Current.GameMenuManager.OnFrameTick(this, dt);
		}

		// Token: 0x06002E53 RID: 11859 RVA: 0x000C1BBC File Offset: 0x000BFDBC
		public void OnHourlyTick()
		{
			IMenuContextHandler handler = this.Handler;
			if (handler == null)
			{
				return;
			}
			handler.OnHourlyTick();
		}

		// Token: 0x06002E54 RID: 11860 RVA: 0x000C1BCE File Offset: 0x000BFDCE
		public object GetCurrentRepeatableObject()
		{
			return Campaign.Current.GameMenuManager.ObjectGetCurrentRepeatableObject(this);
		}

		// Token: 0x06002E55 RID: 11861 RVA: 0x000C1BE0 File Offset: 0x000BFDE0
		public object GetSelectedObject()
		{
			return Campaign.Current.GameMenuManager.GetSelectedRepeatableObject(this);
		}

		// Token: 0x06002E56 RID: 11862 RVA: 0x000C1BF2 File Offset: 0x000BFDF2
		public object GetSelectedRepeatableObject()
		{
			return Campaign.Current.GameMenuManager.GetSelectedRepeatableObject(this);
		}

		// Token: 0x06002E57 RID: 11863 RVA: 0x000C1C04 File Offset: 0x000BFE04
		public void SetRepeatObjectList(IEnumerable<object> list)
		{
			Campaign.Current.GameMenuManager.SetRepeatObjectList(this, list);
		}

		// Token: 0x06002E58 RID: 11864 RVA: 0x000C1C17 File Offset: 0x000BFE17
		public void OnConsequence(GameMenuOption gameMenuOption)
		{
			if (Campaign.Current == null)
			{
				return;
			}
			Campaign.Current.GameMenuCallbackManager.OnConsequence(this.GameMenu.StringId, gameMenuOption, this);
		}

		// Token: 0x06002E59 RID: 11865 RVA: 0x000C1C3D File Offset: 0x000BFE3D
		public void InvokeConsequence(int index)
		{
			if (Campaign.Current.CurrentMenuContext != this)
			{
				return;
			}
			Campaign.Current.GameMenuManager.RunConsequenceOfVirtualMenuOption(this, index);
		}

		// Token: 0x06002E5A RID: 11866 RVA: 0x000C1C5E File Offset: 0x000BFE5E
		public void CloseEvent()
		{
			if (Settlement.CurrentSettlement != null)
			{
				Campaign.Current.MapEventManager.FinalizePlayerMapEvent(null);
				Campaign.Current.autoEnterTown = Settlement.CurrentSettlement.Party;
				Game.Current.GameStateManager.PopState(0);
			}
		}

		// Token: 0x06002E5B RID: 11867 RVA: 0x000C1C9B File Offset: 0x000BFE9B
		public void SetBackgroundMeshName(string name)
		{
			this.CurrentBackgroundMeshName = name;
			IMenuContextHandler handler = this.Handler;
			if (handler == null)
			{
				return;
			}
			handler.OnBackgroundMeshNameSet(name);
		}

		// Token: 0x06002E5C RID: 11868 RVA: 0x000C1CB5 File Offset: 0x000BFEB5
		public void SetPanelSound(string panelSoundID)
		{
			this.CurrentPanelSoundID = panelSoundID;
			IMenuContextHandler handler = this.Handler;
			if (handler == null)
			{
				return;
			}
			handler.OnPanelSoundIDSet(panelSoundID);
		}

		// Token: 0x06002E5D RID: 11869 RVA: 0x000C1CCF File Offset: 0x000BFECF
		public void SetAmbientSound(string ambientSoundID)
		{
			this.CurrentAmbientSoundID = ambientSoundID;
			IMenuContextHandler handler = this.Handler;
			if (handler == null)
			{
				return;
			}
			handler.OnAmbientSoundIDSet(ambientSoundID);
		}

		// Token: 0x06002E5E RID: 11870 RVA: 0x000C1CE9 File Offset: 0x000BFEE9
		public void OpenTownManagement()
		{
			IMenuContextHandler handler = this.Handler;
			if (handler == null)
			{
				return;
			}
			handler.OnOpenTownManagement();
		}

		// Token: 0x06002E5F RID: 11871 RVA: 0x000C1CFB File Offset: 0x000BFEFB
		public void OpenRecruitVolunteers()
		{
			IMenuContextHandler handler = this.Handler;
			if (handler == null)
			{
				return;
			}
			handler.OnOpenRecruitVolunteers();
		}

		// Token: 0x06002E60 RID: 11872 RVA: 0x000C1D0D File Offset: 0x000BFF0D
		public void OpenTournamentLeaderboards()
		{
			IMenuContextHandler handler = this.Handler;
			if (handler == null)
			{
				return;
			}
			handler.OnOpenTournamentLeaderboard();
		}

		// Token: 0x06002E61 RID: 11873 RVA: 0x000C1D1F File Offset: 0x000BFF1F
		public void OpenTroopSelection(TroopRoster fullRoster, TroopRoster initialSelections, Func<CharacterObject, bool> canChangeStatusOfTroop, Action<TroopRoster> onDone, int maxSelectableTroopCount, int minSelectableTroopCount = 1)
		{
			IMenuContextHandler handler = this.Handler;
			if (handler == null)
			{
				return;
			}
			handler.OnOpenTroopSelection(fullRoster, initialSelections, canChangeStatusOfTroop, onDone, maxSelectableTroopCount, minSelectableTroopCount);
		}

		// Token: 0x04000DDB RID: 3547
		[SaveableField(102)]
		private MenuContext.MenuContextState _currentState;

		// Token: 0x02000685 RID: 1669
		internal enum MenuContextState
		{
			// Token: 0x04001B75 RID: 7029
			None,
			// Token: 0x04001B76 RID: 7030
			RequiresCreation,
			// Token: 0x04001B77 RID: 7031
			RequiresInitialization,
			// Token: 0x04001B78 RID: 7032
			Finalized
		}
	}
}
