using System;
using System.Collections.Generic;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Settlements
{
	// Token: 0x02000362 RID: 866
	public struct ItemData
	{
		// Token: 0x0600328A RID: 12938 RVA: 0x000D3098 File Offset: 0x000D1298
		public static void AutoGeneratedStaticCollectObjectsItemData(object o, List<object> collectedObjects)
		{
			((ItemData)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x0600328B RID: 12939 RVA: 0x000D30B4 File Offset: 0x000D12B4
		private void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
		}

		// Token: 0x0600328C RID: 12940 RVA: 0x000D30B6 File Offset: 0x000D12B6
		internal static object AutoGeneratedGetMemberValueSupply(object o)
		{
			return ((ItemData)o).Supply;
		}

		// Token: 0x0600328D RID: 12941 RVA: 0x000D30C8 File Offset: 0x000D12C8
		internal static object AutoGeneratedGetMemberValueDemand(object o)
		{
			return ((ItemData)o).Demand;
		}

		// Token: 0x0600328E RID: 12942 RVA: 0x000D30DA File Offset: 0x000D12DA
		internal static object AutoGeneratedGetMemberValueInStore(object o)
		{
			return ((ItemData)o).InStore;
		}

		// Token: 0x0600328F RID: 12943 RVA: 0x000D30EC File Offset: 0x000D12EC
		internal static object AutoGeneratedGetMemberValueInStoreValue(object o)
		{
			return ((ItemData)o).InStoreValue;
		}

		// Token: 0x06003290 RID: 12944 RVA: 0x000D30FE File Offset: 0x000D12FE
		public ItemData(float supply, float demand, int inStore, int inStoreValue)
		{
			this.Supply = supply;
			this.Demand = demand;
			this.InStore = inStore;
			this.InStoreValue = inStoreValue;
		}

		// Token: 0x06003291 RID: 12945 RVA: 0x000D311D File Offset: 0x000D131D
		public ItemData Add(ItemData other)
		{
			return new ItemData(this.Supply + other.Supply, this.Demand + other.Demand, this.InStore + other.InStore, this.InStoreValue + other.InStoreValue);
		}

		// Token: 0x06003292 RID: 12946 RVA: 0x000D3158 File Offset: 0x000D1358
		internal ItemData AddDemand(float demandAmount)
		{
			return new ItemData(this.Supply, this.Demand + demandAmount, this.InStore, this.InStoreValue);
		}

		// Token: 0x06003293 RID: 12947 RVA: 0x000D3179 File Offset: 0x000D1379
		internal ItemData AddSupply(float supplyAmount)
		{
			return new ItemData(this.Supply + supplyAmount, this.Demand, this.InStore, this.InStoreValue);
		}

		// Token: 0x06003294 RID: 12948 RVA: 0x000D319A File Offset: 0x000D139A
		internal ItemData AddInStore(int inStoreAmount, int value)
		{
			return new ItemData(this.Supply, this.Demand, this.InStore + inStoreAmount, this.InStoreValue + inStoreAmount * value);
		}

		// Token: 0x06003295 RID: 12949 RVA: 0x000D31BF File Offset: 0x000D13BF
		internal ItemData AddSupplyDemand(float supply, float demand)
		{
			return new ItemData(this.Supply + supply, this.Demand + demand, this.InStore, this.InStoreValue);
		}

		// Token: 0x04001051 RID: 4177
		[SaveableField(1)]
		public readonly float Supply;

		// Token: 0x04001052 RID: 4178
		[SaveableField(2)]
		public readonly float Demand;

		// Token: 0x04001053 RID: 4179
		[SaveableField(3)]
		public readonly int InStore;

		// Token: 0x04001054 RID: 4180
		[SaveableField(4)]
		public readonly int InStoreValue;
	}
}
