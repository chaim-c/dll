using System;
using System.ComponentModel;
using System.Numerics;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.GauntletUI.Layout;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.ViewModelCollection.HUD;

namespace TaleWorlds.MountAndBlade.GauntletUI.AutoGenerated0
{
	// Token: 0x02000006 RID: 6
	public class MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM : Widget, IGeneratedGauntletMovieRoot
	{
		// Token: 0x060000A5 RID: 165 RVA: 0x000062FC File Offset: 0x000044FC
		public MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM(UIContext context) : base(context)
		{
		}

		// Token: 0x060000A6 RID: 166 RVA: 0x00006308 File Offset: 0x00004508
		private VisualDefinition CreateVisualDefinitionCircleBackground()
		{
			VisualDefinition visualDefinition = new VisualDefinition("CircleBackground", 0.15f, 0f, false);
			visualDefinition.AddVisualState(new VisualState("Selected")
			{
				SuggestedHeight = 84f,
				SuggestedWidth = 85f
			});
			visualDefinition.AddVisualState(new VisualState("Default")
			{
				SuggestedHeight = 74f,
				SuggestedWidth = 75f
			});
			visualDefinition.AddVisualState(new VisualState("Pressed")
			{
				SuggestedHeight = 74f,
				SuggestedWidth = 75f
			});
			visualDefinition.AddVisualState(new VisualState("Hovered")
			{
				SuggestedHeight = 74f,
				SuggestedWidth = 75f
			});
			visualDefinition.AddVisualState(new VisualState("Disabled")
			{
				SuggestedHeight = 74f,
				SuggestedWidth = 75f
			});
			return visualDefinition;
		}

		// Token: 0x060000A7 RID: 167 RVA: 0x000063F8 File Offset: 0x000045F8
		private VisualDefinition CreateVisualDefinitionCircleGlow()
		{
			VisualDefinition visualDefinition = new VisualDefinition("CircleGlow", 0.15f, 0f, false);
			visualDefinition.AddVisualState(new VisualState("Selected")
			{
				SuggestedHeight = 125f,
				SuggestedWidth = 127f
			});
			visualDefinition.AddVisualState(new VisualState("Default")
			{
				SuggestedHeight = 115f,
				SuggestedWidth = 117f
			});
			visualDefinition.AddVisualState(new VisualState("Pressed")
			{
				SuggestedHeight = 115f,
				SuggestedWidth = 117f
			});
			visualDefinition.AddVisualState(new VisualState("Hovered")
			{
				SuggestedHeight = 115f,
				SuggestedWidth = 117f
			});
			visualDefinition.AddVisualState(new VisualState("Disabled")
			{
				SuggestedHeight = 115f,
				SuggestedWidth = 117f
			});
			return visualDefinition;
		}

		// Token: 0x060000A8 RID: 168 RVA: 0x000064E8 File Offset: 0x000046E8
		public void CreateWidgets()
		{
			this._widget = this;
			this._widget_0 = new TextWidget(base.Context);
			this._widget.AddChild(this._widget_0);
			this._widget_1 = new Widget(base.Context);
			this._widget.AddChild(this._widget_1);
			this._widget_1_0 = new Widget(base.Context);
			this._widget_1.AddChild(this._widget_1_0);
			this._widget_1_1 = new CircleActionSelectorWidget(base.Context);
			this._widget_1.AddChild(this._widget_1_1);
			this._widget_2 = new Widget(base.Context);
			this._widget.AddChild(this._widget_2);
			this._widget_2_0 = new ListPanel(base.Context);
			this._widget_2.AddChild(this._widget_2_0);
		}

		// Token: 0x060000A9 RID: 169 RVA: 0x000065C8 File Offset: 0x000047C8
		public void SetIds()
		{
			this._widget_1.Id = "ActionContainer";
		}

		// Token: 0x060000AA RID: 170 RVA: 0x000065DC File Offset: 0x000047DC
		public void SetAttributes()
		{
			base.WidthSizePolicy = SizePolicy.StretchToParent;
			base.HeightSizePolicy = SizePolicy.StretchToParent;
			this._widget_0.WidthSizePolicy = SizePolicy.Fixed;
			this._widget_0.HeightSizePolicy = SizePolicy.CoverChildren;
			this._widget_0.SuggestedWidth = 150f;
			this._widget_0.HorizontalAlignment = HorizontalAlignment.Center;
			this._widget_0.VerticalAlignment = VerticalAlignment.Bottom;
			this._widget_0.Brush = base.Context.GetBrush("Mission.CheerBark.Item.Warning.Text");
			this._widget_0.PositionXOffset = -55f;
			this._widget_0.PositionYOffset = -260f;
			this._widget_0.ClipContents = false;
			this._widget_1.WidthSizePolicy = SizePolicy.Fixed;
			this._widget_1.HeightSizePolicy = SizePolicy.Fixed;
			this._widget_1.SuggestedWidth = 200f;
			this._widget_1.SuggestedHeight = 200f;
			this._widget_1.HorizontalAlignment = HorizontalAlignment.Center;
			this._widget_1.VerticalAlignment = VerticalAlignment.Bottom;
			this._widget_1.PositionYOffset = -130f;
			this._widget_1_0.WidthSizePolicy = SizePolicy.Fixed;
			this._widget_1_0.HeightSizePolicy = SizePolicy.Fixed;
			this._widget_1_0.SuggestedWidth = 459f;
			this._widget_1_0.SuggestedHeight = 459f;
			this._widget_1_0.HorizontalAlignment = HorizontalAlignment.Center;
			this._widget_1_0.VerticalAlignment = VerticalAlignment.Center;
			this._widget_1_0.Sprite = base.Context.SpriteData.GetSprite("RadialMenu\\radial_menu_bg");
			this._widget_1_0.Color = new Color(0f, 0f, 0f, 0.4666667f);
			this._widget_1_1.WidthSizePolicy = SizePolicy.StretchToParent;
			this._widget_1_1.HeightSizePolicy = SizePolicy.StretchToParent;
			this._widget_1_1.HorizontalAlignment = HorizontalAlignment.Center;
			this._widget_1_1.VerticalAlignment = VerticalAlignment.Bottom;
			this._widget_1_1.DistanceFromCenterModifier = 160f;
			this._widget_2.WidthSizePolicy = SizePolicy.CoverChildren;
			this._widget_2.HeightSizePolicy = SizePolicy.CoverChildren;
			this._widget_2.HorizontalAlignment = HorizontalAlignment.Center;
			this._widget_2.VerticalAlignment = VerticalAlignment.Bottom;
			this._widget_2_0.WidthSizePolicy = SizePolicy.Fixed;
			this._widget_2_0.HeightSizePolicy = SizePolicy.Fixed;
			this._widget_2_0.SuggestedWidth = 250f;
			this._widget_2_0.SuggestedHeight = 120f;
			this._widget_2_0.StackLayout.LayoutMethod = LayoutMethod.HorizontalLeftToRight;
		}

		// Token: 0x060000AB RID: 171 RVA: 0x0000682C File Offset: 0x00004A2C
		public void RefreshBindingWithChildren()
		{
			MissionMainAgentCheerBarkControllerVM datasource_Root = this._datasource_Root;
			this.SetDataSource(null);
			this.SetDataSource(datasource_Root);
		}

		// Token: 0x060000AC RID: 172 RVA: 0x00006850 File Offset: 0x00004A50
		public void DestroyDataSource()
		{
			if (this._datasource_Root != null)
			{
				this._datasource_Root.PropertyChanged -= this.ViewModelPropertyChangedListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithValue -= this.ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithBoolValue -= this.ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithIntValue -= this.ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithFloatValue -= this.ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithUIntValue -= this.ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithColorValue -= this.ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithDoubleValue -= this.ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithVec2Value -= this.ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
				this._widget.PropertyChanged -= this.PropertyChangedListenerOf_widget;
				this._widget.boolPropertyChanged -= this.boolPropertyChangedListenerOf_widget;
				this._widget.floatPropertyChanged -= this.floatPropertyChangedListenerOf_widget;
				this._widget.Vec2PropertyChanged -= this.Vec2PropertyChangedListenerOf_widget;
				this._widget.Vector2PropertyChanged -= this.Vector2PropertyChangedListenerOf_widget;
				this._widget.doublePropertyChanged -= this.doublePropertyChangedListenerOf_widget;
				this._widget.intPropertyChanged -= this.intPropertyChangedListenerOf_widget;
				this._widget.uintPropertyChanged -= this.uintPropertyChangedListenerOf_widget;
				this._widget.ColorPropertyChanged -= this.ColorPropertyChangedListenerOf_widget;
				this._widget_0.PropertyChanged -= this.PropertyChangedListenerOf_widget_0;
				this._widget_0.boolPropertyChanged -= this.boolPropertyChangedListenerOf_widget_0;
				this._widget_0.floatPropertyChanged -= this.floatPropertyChangedListenerOf_widget_0;
				this._widget_0.Vec2PropertyChanged -= this.Vec2PropertyChangedListenerOf_widget_0;
				this._widget_0.Vector2PropertyChanged -= this.Vector2PropertyChangedListenerOf_widget_0;
				this._widget_0.doublePropertyChanged -= this.doublePropertyChangedListenerOf_widget_0;
				this._widget_0.intPropertyChanged -= this.intPropertyChangedListenerOf_widget_0;
				this._widget_0.uintPropertyChanged -= this.uintPropertyChangedListenerOf_widget_0;
				this._widget_0.ColorPropertyChanged -= this.ColorPropertyChangedListenerOf_widget_0;
				this._widget_1.PropertyChanged -= this.PropertyChangedListenerOf_widget_1;
				this._widget_1.boolPropertyChanged -= this.boolPropertyChangedListenerOf_widget_1;
				this._widget_1.floatPropertyChanged -= this.floatPropertyChangedListenerOf_widget_1;
				this._widget_1.Vec2PropertyChanged -= this.Vec2PropertyChangedListenerOf_widget_1;
				this._widget_1.Vector2PropertyChanged -= this.Vector2PropertyChangedListenerOf_widget_1;
				this._widget_1.doublePropertyChanged -= this.doublePropertyChangedListenerOf_widget_1;
				this._widget_1.intPropertyChanged -= this.intPropertyChangedListenerOf_widget_1;
				this._widget_1.uintPropertyChanged -= this.uintPropertyChangedListenerOf_widget_1;
				this._widget_1.ColorPropertyChanged -= this.ColorPropertyChangedListenerOf_widget_1;
				this._widget_2.PropertyChanged -= this.PropertyChangedListenerOf_widget_2;
				this._widget_2.boolPropertyChanged -= this.boolPropertyChangedListenerOf_widget_2;
				this._widget_2.floatPropertyChanged -= this.floatPropertyChangedListenerOf_widget_2;
				this._widget_2.Vec2PropertyChanged -= this.Vec2PropertyChangedListenerOf_widget_2;
				this._widget_2.Vector2PropertyChanged -= this.Vector2PropertyChangedListenerOf_widget_2;
				this._widget_2.doublePropertyChanged -= this.doublePropertyChangedListenerOf_widget_2;
				this._widget_2.intPropertyChanged -= this.intPropertyChangedListenerOf_widget_2;
				this._widget_2.uintPropertyChanged -= this.uintPropertyChangedListenerOf_widget_2;
				this._widget_2.ColorPropertyChanged -= this.ColorPropertyChangedListenerOf_widget_2;
				if (this._datasource_Root_Nodes != null)
				{
					this._datasource_Root_Nodes.ListChanged -= this.OnList_datasource_Root_NodesChanged;
					for (int i = this._widget_1_1.ChildCount - 1; i >= 0; i--)
					{
						Widget child = this._widget_1_1.GetChild(i);
						((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
						((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate)this._widget_1_1.GetChild(i)).DestroyDataSource();
					}
					for (int j = this._widget_2_0.ChildCount - 1; j >= 0; j--)
					{
						Widget child2 = this._widget_2_0.GetChild(j);
						((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate)child2).OnBeforeRemovedChild(child2);
						((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate)this._widget_2_0.GetChild(j)).DestroyDataSource();
					}
					this._datasource_Root_Nodes = null;
				}
				this._datasource_Root = null;
			}
		}

		// Token: 0x060000AD RID: 173 RVA: 0x00006D31 File Offset: 0x00004F31
		public void SetDataSource(MissionMainAgentCheerBarkControllerVM dataSource)
		{
			this.RefreshDataSource_datasource_Root(dataSource);
		}

		// Token: 0x060000AE RID: 174 RVA: 0x00006D3A File Offset: 0x00004F3A
		private void PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
		{
			this.HandleWidgetPropertyChangeOf_widget(propertyName);
		}

		// Token: 0x060000AF RID: 175 RVA: 0x00006D43 File Offset: 0x00004F43
		private void boolPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
		{
			this.HandleWidgetPropertyChangeOf_widget(propertyName);
		}

		// Token: 0x060000B0 RID: 176 RVA: 0x00006D4C File Offset: 0x00004F4C
		private void floatPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
		{
			this.HandleWidgetPropertyChangeOf_widget(propertyName);
		}

		// Token: 0x060000B1 RID: 177 RVA: 0x00006D55 File Offset: 0x00004F55
		private void Vec2PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
		{
			this.HandleWidgetPropertyChangeOf_widget(propertyName);
		}

		// Token: 0x060000B2 RID: 178 RVA: 0x00006D5E File Offset: 0x00004F5E
		private void Vector2PropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
		{
			this.HandleWidgetPropertyChangeOf_widget(propertyName);
		}

		// Token: 0x060000B3 RID: 179 RVA: 0x00006D67 File Offset: 0x00004F67
		private void doublePropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
		{
			this.HandleWidgetPropertyChangeOf_widget(propertyName);
		}

		// Token: 0x060000B4 RID: 180 RVA: 0x00006D70 File Offset: 0x00004F70
		private void intPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
		{
			this.HandleWidgetPropertyChangeOf_widget(propertyName);
		}

		// Token: 0x060000B5 RID: 181 RVA: 0x00006D79 File Offset: 0x00004F79
		private void uintPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
		{
			this.HandleWidgetPropertyChangeOf_widget(propertyName);
		}

		// Token: 0x060000B6 RID: 182 RVA: 0x00006D82 File Offset: 0x00004F82
		private void ColorPropertyChangedListenerOf_widget(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
		{
			this.HandleWidgetPropertyChangeOf_widget(propertyName);
		}

		// Token: 0x060000B7 RID: 183 RVA: 0x00006D8B File Offset: 0x00004F8B
		private void HandleWidgetPropertyChangeOf_widget(string propertyName)
		{
			if (propertyName == "IsVisible")
			{
				this._datasource_Root.IsActive = this._widget.IsVisible;
				return;
			}
		}

		// Token: 0x060000B8 RID: 184 RVA: 0x00006DB1 File Offset: 0x00004FB1
		private void PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
		{
			this.HandleWidgetPropertyChangeOf_widget_0(propertyName);
		}

		// Token: 0x060000B9 RID: 185 RVA: 0x00006DBA File Offset: 0x00004FBA
		private void boolPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
		{
			this.HandleWidgetPropertyChangeOf_widget_0(propertyName);
		}

		// Token: 0x060000BA RID: 186 RVA: 0x00006DC3 File Offset: 0x00004FC3
		private void floatPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
		{
			this.HandleWidgetPropertyChangeOf_widget_0(propertyName);
		}

		// Token: 0x060000BB RID: 187 RVA: 0x00006DCC File Offset: 0x00004FCC
		private void Vec2PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
		{
			this.HandleWidgetPropertyChangeOf_widget_0(propertyName);
		}

		// Token: 0x060000BC RID: 188 RVA: 0x00006DD5 File Offset: 0x00004FD5
		private void Vector2PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
		{
			this.HandleWidgetPropertyChangeOf_widget_0(propertyName);
		}

		// Token: 0x060000BD RID: 189 RVA: 0x00006DDE File Offset: 0x00004FDE
		private void doublePropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
		{
			this.HandleWidgetPropertyChangeOf_widget_0(propertyName);
		}

		// Token: 0x060000BE RID: 190 RVA: 0x00006DE7 File Offset: 0x00004FE7
		private void intPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
		{
			this.HandleWidgetPropertyChangeOf_widget_0(propertyName);
		}

		// Token: 0x060000BF RID: 191 RVA: 0x00006DF0 File Offset: 0x00004FF0
		private void uintPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
		{
			this.HandleWidgetPropertyChangeOf_widget_0(propertyName);
		}

		// Token: 0x060000C0 RID: 192 RVA: 0x00006DF9 File Offset: 0x00004FF9
		private void ColorPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
		{
			this.HandleWidgetPropertyChangeOf_widget_0(propertyName);
		}

		// Token: 0x060000C1 RID: 193 RVA: 0x00006E02 File Offset: 0x00005002
		private void HandleWidgetPropertyChangeOf_widget_0(string propertyName)
		{
			if (propertyName == "Text")
			{
				this._datasource_Root.DisabledReasonText = this._widget_0.Text;
				return;
			}
		}

		// Token: 0x060000C2 RID: 194 RVA: 0x00006E28 File Offset: 0x00005028
		private void PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
		{
			this.HandleWidgetPropertyChangeOf_widget_1(propertyName);
		}

		// Token: 0x060000C3 RID: 195 RVA: 0x00006E31 File Offset: 0x00005031
		private void boolPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
		{
			this.HandleWidgetPropertyChangeOf_widget_1(propertyName);
		}

		// Token: 0x060000C4 RID: 196 RVA: 0x00006E3A File Offset: 0x0000503A
		private void floatPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
		{
			this.HandleWidgetPropertyChangeOf_widget_1(propertyName);
		}

		// Token: 0x060000C5 RID: 197 RVA: 0x00006E43 File Offset: 0x00005043
		private void Vec2PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
		{
			this.HandleWidgetPropertyChangeOf_widget_1(propertyName);
		}

		// Token: 0x060000C6 RID: 198 RVA: 0x00006E4C File Offset: 0x0000504C
		private void Vector2PropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
		{
			this.HandleWidgetPropertyChangeOf_widget_1(propertyName);
		}

		// Token: 0x060000C7 RID: 199 RVA: 0x00006E55 File Offset: 0x00005055
		private void doublePropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
		{
			this.HandleWidgetPropertyChangeOf_widget_1(propertyName);
		}

		// Token: 0x060000C8 RID: 200 RVA: 0x00006E5E File Offset: 0x0000505E
		private void intPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
		{
			this.HandleWidgetPropertyChangeOf_widget_1(propertyName);
		}

		// Token: 0x060000C9 RID: 201 RVA: 0x00006E67 File Offset: 0x00005067
		private void uintPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
		{
			this.HandleWidgetPropertyChangeOf_widget_1(propertyName);
		}

		// Token: 0x060000CA RID: 202 RVA: 0x00006E70 File Offset: 0x00005070
		private void ColorPropertyChangedListenerOf_widget_1(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
		{
			this.HandleWidgetPropertyChangeOf_widget_1(propertyName);
		}

		// Token: 0x060000CB RID: 203 RVA: 0x00006E79 File Offset: 0x00005079
		private void HandleWidgetPropertyChangeOf_widget_1(string propertyName)
		{
			if (propertyName == "IsHidden")
			{
				this._datasource_Root.IsNodesCategories = this._widget_1.IsHidden;
				return;
			}
		}

		// Token: 0x060000CC RID: 204 RVA: 0x00006E9F File Offset: 0x0000509F
		private void PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
		{
			this.HandleWidgetPropertyChangeOf_widget_2(propertyName);
		}

		// Token: 0x060000CD RID: 205 RVA: 0x00006EA8 File Offset: 0x000050A8
		private void boolPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
		{
			this.HandleWidgetPropertyChangeOf_widget_2(propertyName);
		}

		// Token: 0x060000CE RID: 206 RVA: 0x00006EB1 File Offset: 0x000050B1
		private void floatPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
		{
			this.HandleWidgetPropertyChangeOf_widget_2(propertyName);
		}

		// Token: 0x060000CF RID: 207 RVA: 0x00006EBA File Offset: 0x000050BA
		private void Vec2PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
		{
			this.HandleWidgetPropertyChangeOf_widget_2(propertyName);
		}

		// Token: 0x060000D0 RID: 208 RVA: 0x00006EC3 File Offset: 0x000050C3
		private void Vector2PropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
		{
			this.HandleWidgetPropertyChangeOf_widget_2(propertyName);
		}

		// Token: 0x060000D1 RID: 209 RVA: 0x00006ECC File Offset: 0x000050CC
		private void doublePropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
		{
			this.HandleWidgetPropertyChangeOf_widget_2(propertyName);
		}

		// Token: 0x060000D2 RID: 210 RVA: 0x00006ED5 File Offset: 0x000050D5
		private void intPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
		{
			this.HandleWidgetPropertyChangeOf_widget_2(propertyName);
		}

		// Token: 0x060000D3 RID: 211 RVA: 0x00006EDE File Offset: 0x000050DE
		private void uintPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
		{
			this.HandleWidgetPropertyChangeOf_widget_2(propertyName);
		}

		// Token: 0x060000D4 RID: 212 RVA: 0x00006EE7 File Offset: 0x000050E7
		private void ColorPropertyChangedListenerOf_widget_2(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
		{
			this.HandleWidgetPropertyChangeOf_widget_2(propertyName);
		}

		// Token: 0x060000D5 RID: 213 RVA: 0x00006EF0 File Offset: 0x000050F0
		private void HandleWidgetPropertyChangeOf_widget_2(string propertyName)
		{
			if (propertyName == "IsVisible")
			{
				this._datasource_Root.IsNodesCategories = this._widget_2.IsVisible;
				return;
			}
		}

		// Token: 0x060000D6 RID: 214 RVA: 0x00006F16 File Offset: 0x00005116
		private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
		{
			this.HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
		}

		// Token: 0x060000D7 RID: 215 RVA: 0x00006F24 File Offset: 0x00005124
		private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
		{
			this.HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
		}

		// Token: 0x060000D8 RID: 216 RVA: 0x00006F32 File Offset: 0x00005132
		private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
		{
			this.HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
		}

		// Token: 0x060000D9 RID: 217 RVA: 0x00006F40 File Offset: 0x00005140
		private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
		{
			this.HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
		}

		// Token: 0x060000DA RID: 218 RVA: 0x00006F4E File Offset: 0x0000514E
		private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
		{
			this.HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
		}

		// Token: 0x060000DB RID: 219 RVA: 0x00006F5C File Offset: 0x0000515C
		private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
		{
			this.HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
		}

		// Token: 0x060000DC RID: 220 RVA: 0x00006F6A File Offset: 0x0000516A
		private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
		{
			this.HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
		}

		// Token: 0x060000DD RID: 221 RVA: 0x00006F78 File Offset: 0x00005178
		private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
		{
			this.HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
		}

		// Token: 0x060000DE RID: 222 RVA: 0x00006F86 File Offset: 0x00005186
		private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
		{
			this.HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
		}

		// Token: 0x060000DF RID: 223 RVA: 0x00006F94 File Offset: 0x00005194
		private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
		{
			if (propertyName == "Nodes")
			{
				this.RefreshDataSource_datasource_Root_Nodes(this._datasource_Root.Nodes);
				return;
			}
			if (propertyName == "IsActive")
			{
				this._widget.IsVisible = this._datasource_Root.IsActive;
				return;
			}
			if (propertyName == "DisabledReasonText")
			{
				this._widget_0.Text = this._datasource_Root.DisabledReasonText;
				return;
			}
			if (propertyName == "IsNodesCategories")
			{
				this._widget_1.IsHidden = this._datasource_Root.IsNodesCategories;
				this._widget_2.IsVisible = this._datasource_Root.IsNodesCategories;
				return;
			}
		}

		// Token: 0x060000E0 RID: 224 RVA: 0x00007044 File Offset: 0x00005244
		public void OnList_datasource_Root_NodesChanged(object sender, ListChangedEventArgs e)
		{
			switch (e.ListChangedType)
			{
			case ListChangedType.Reset:
				for (int i = this._widget_1_1.ChildCount - 1; i >= 0; i--)
				{
					Widget child = this._widget_1_1.GetChild(i);
					((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = this._widget_1_1.GetChild(i);
					((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate)child2).SetDataSource(null);
					this._widget_1_1.RemoveChild(child2);
				}
				for (int j = this._widget_2_0.ChildCount - 1; j >= 0; j--)
				{
					Widget child3 = this._widget_2_0.GetChild(j);
					((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate)child3).OnBeforeRemovedChild(child3);
					Widget child4 = this._widget_2_0.GetChild(j);
					((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate)child4).SetDataSource(null);
					this._widget_2_0.RemoveChild(child4);
				}
				return;
			case ListChangedType.Sorted:
				for (int k = 0; k < this._datasource_Root_Nodes.Count; k++)
				{
					CheerBarkNodeItemVM bindingObject = this._datasource_Root_Nodes[k];
					this._widget_1_1.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(k, false);
					this._widget_2_0.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(k, false);
				}
				return;
			case ListChangedType.ItemAdded:
			{
				MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate = new MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate);
				CheerBarkNodeItemVM cheerBarkNodeItemVM = this._datasource_Root_Nodes[e.NewIndex];
				generatedWidgetData.Data = cheerBarkNodeItemVM;
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
				this._widget_1_1.AddChildAtIndex(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate, e.NewIndex);
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate.CreateWidgets();
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate.SetIds();
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate.SetAttributes();
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate.SetDataSource(cheerBarkNodeItemVM);
				MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate = new MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData2 = new GeneratedWidgetData(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate);
				CheerBarkNodeItemVM cheerBarkNodeItemVM2 = this._datasource_Root_Nodes[e.NewIndex];
				generatedWidgetData2.Data = cheerBarkNodeItemVM2;
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate.AddComponent(generatedWidgetData2);
				this._widget_2_0.AddChildAtIndex(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate, e.NewIndex);
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate.CreateWidgets();
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate.SetIds();
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate.SetAttributes();
				mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate.SetDataSource(cheerBarkNodeItemVM2);
				return;
			}
			case ListChangedType.ItemBeforeDeleted:
			{
				Widget child5 = this._widget_1_1.GetChild(e.NewIndex);
				((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate)child5).OnBeforeRemovedChild(child5);
				Widget child6 = this._widget_2_0.GetChild(e.NewIndex);
				((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate)child6).OnBeforeRemovedChild(child6);
				return;
			}
			case ListChangedType.ItemDeleted:
			{
				Widget child7 = this._widget_1_1.GetChild(e.NewIndex);
				((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate)child7).SetDataSource(null);
				this._widget_1_1.RemoveChild(child7);
				Widget child8 = this._widget_2_0.GetChild(e.NewIndex);
				((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate)child8).SetDataSource(null);
				this._widget_2_0.RemoveChild(child8);
				break;
			}
			case ListChangedType.ItemChanged:
				break;
			default:
				return;
			}
		}

		// Token: 0x060000E1 RID: 225 RVA: 0x0000731C File Offset: 0x0000551C
		private void RefreshDataSource_datasource_Root(MissionMainAgentCheerBarkControllerVM newDataSource)
		{
			if (this._datasource_Root != null)
			{
				this._datasource_Root.PropertyChanged -= this.ViewModelPropertyChangedListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithValue -= this.ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithBoolValue -= this.ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithIntValue -= this.ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithFloatValue -= this.ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithUIntValue -= this.ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithColorValue -= this.ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithDoubleValue -= this.ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithVec2Value -= this.ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
				this._widget.PropertyChanged -= this.PropertyChangedListenerOf_widget;
				this._widget.boolPropertyChanged -= this.boolPropertyChangedListenerOf_widget;
				this._widget.floatPropertyChanged -= this.floatPropertyChangedListenerOf_widget;
				this._widget.Vec2PropertyChanged -= this.Vec2PropertyChangedListenerOf_widget;
				this._widget.Vector2PropertyChanged -= this.Vector2PropertyChangedListenerOf_widget;
				this._widget.doublePropertyChanged -= this.doublePropertyChangedListenerOf_widget;
				this._widget.intPropertyChanged -= this.intPropertyChangedListenerOf_widget;
				this._widget.uintPropertyChanged -= this.uintPropertyChangedListenerOf_widget;
				this._widget.ColorPropertyChanged -= this.ColorPropertyChangedListenerOf_widget;
				this._widget_0.PropertyChanged -= this.PropertyChangedListenerOf_widget_0;
				this._widget_0.boolPropertyChanged -= this.boolPropertyChangedListenerOf_widget_0;
				this._widget_0.floatPropertyChanged -= this.floatPropertyChangedListenerOf_widget_0;
				this._widget_0.Vec2PropertyChanged -= this.Vec2PropertyChangedListenerOf_widget_0;
				this._widget_0.Vector2PropertyChanged -= this.Vector2PropertyChangedListenerOf_widget_0;
				this._widget_0.doublePropertyChanged -= this.doublePropertyChangedListenerOf_widget_0;
				this._widget_0.intPropertyChanged -= this.intPropertyChangedListenerOf_widget_0;
				this._widget_0.uintPropertyChanged -= this.uintPropertyChangedListenerOf_widget_0;
				this._widget_0.ColorPropertyChanged -= this.ColorPropertyChangedListenerOf_widget_0;
				this._widget_1.PropertyChanged -= this.PropertyChangedListenerOf_widget_1;
				this._widget_1.boolPropertyChanged -= this.boolPropertyChangedListenerOf_widget_1;
				this._widget_1.floatPropertyChanged -= this.floatPropertyChangedListenerOf_widget_1;
				this._widget_1.Vec2PropertyChanged -= this.Vec2PropertyChangedListenerOf_widget_1;
				this._widget_1.Vector2PropertyChanged -= this.Vector2PropertyChangedListenerOf_widget_1;
				this._widget_1.doublePropertyChanged -= this.doublePropertyChangedListenerOf_widget_1;
				this._widget_1.intPropertyChanged -= this.intPropertyChangedListenerOf_widget_1;
				this._widget_1.uintPropertyChanged -= this.uintPropertyChangedListenerOf_widget_1;
				this._widget_1.ColorPropertyChanged -= this.ColorPropertyChangedListenerOf_widget_1;
				this._widget_2.PropertyChanged -= this.PropertyChangedListenerOf_widget_2;
				this._widget_2.boolPropertyChanged -= this.boolPropertyChangedListenerOf_widget_2;
				this._widget_2.floatPropertyChanged -= this.floatPropertyChangedListenerOf_widget_2;
				this._widget_2.Vec2PropertyChanged -= this.Vec2PropertyChangedListenerOf_widget_2;
				this._widget_2.Vector2PropertyChanged -= this.Vector2PropertyChangedListenerOf_widget_2;
				this._widget_2.doublePropertyChanged -= this.doublePropertyChangedListenerOf_widget_2;
				this._widget_2.intPropertyChanged -= this.intPropertyChangedListenerOf_widget_2;
				this._widget_2.uintPropertyChanged -= this.uintPropertyChangedListenerOf_widget_2;
				this._widget_2.ColorPropertyChanged -= this.ColorPropertyChangedListenerOf_widget_2;
				if (this._datasource_Root_Nodes != null)
				{
					this._datasource_Root_Nodes.ListChanged -= this.OnList_datasource_Root_NodesChanged;
					for (int i = this._widget_1_1.ChildCount - 1; i >= 0; i--)
					{
						Widget child = this._widget_1_1.GetChild(i);
						((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
						Widget child2 = this._widget_1_1.GetChild(i);
						((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate)child2).SetDataSource(null);
						this._widget_1_1.RemoveChild(child2);
					}
					for (int j = this._widget_2_0.ChildCount - 1; j >= 0; j--)
					{
						Widget child3 = this._widget_2_0.GetChild(j);
						((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate)child3).OnBeforeRemovedChild(child3);
						Widget child4 = this._widget_2_0.GetChild(j);
						((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate)child4).SetDataSource(null);
						this._widget_2_0.RemoveChild(child4);
					}
					this._datasource_Root_Nodes = null;
				}
				this._datasource_Root = null;
			}
			this._datasource_Root = newDataSource;
			if (this._datasource_Root != null)
			{
				this._datasource_Root.PropertyChanged += this.ViewModelPropertyChangedListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithValue += this.ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithBoolValue += this.ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithIntValue += this.ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithFloatValue += this.ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithUIntValue += this.ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithColorValue += this.ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithDoubleValue += this.ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithVec2Value += this.ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
				this._widget.IsVisible = this._datasource_Root.IsActive;
				this._widget.PropertyChanged += this.PropertyChangedListenerOf_widget;
				this._widget.boolPropertyChanged += this.boolPropertyChangedListenerOf_widget;
				this._widget.floatPropertyChanged += this.floatPropertyChangedListenerOf_widget;
				this._widget.Vec2PropertyChanged += this.Vec2PropertyChangedListenerOf_widget;
				this._widget.Vector2PropertyChanged += this.Vector2PropertyChangedListenerOf_widget;
				this._widget.doublePropertyChanged += this.doublePropertyChangedListenerOf_widget;
				this._widget.intPropertyChanged += this.intPropertyChangedListenerOf_widget;
				this._widget.uintPropertyChanged += this.uintPropertyChangedListenerOf_widget;
				this._widget.ColorPropertyChanged += this.ColorPropertyChangedListenerOf_widget;
				this._widget_0.Text = this._datasource_Root.DisabledReasonText;
				this._widget_0.PropertyChanged += this.PropertyChangedListenerOf_widget_0;
				this._widget_0.boolPropertyChanged += this.boolPropertyChangedListenerOf_widget_0;
				this._widget_0.floatPropertyChanged += this.floatPropertyChangedListenerOf_widget_0;
				this._widget_0.Vec2PropertyChanged += this.Vec2PropertyChangedListenerOf_widget_0;
				this._widget_0.Vector2PropertyChanged += this.Vector2PropertyChangedListenerOf_widget_0;
				this._widget_0.doublePropertyChanged += this.doublePropertyChangedListenerOf_widget_0;
				this._widget_0.intPropertyChanged += this.intPropertyChangedListenerOf_widget_0;
				this._widget_0.uintPropertyChanged += this.uintPropertyChangedListenerOf_widget_0;
				this._widget_0.ColorPropertyChanged += this.ColorPropertyChangedListenerOf_widget_0;
				this._widget_1.IsHidden = this._datasource_Root.IsNodesCategories;
				this._widget_1.PropertyChanged += this.PropertyChangedListenerOf_widget_1;
				this._widget_1.boolPropertyChanged += this.boolPropertyChangedListenerOf_widget_1;
				this._widget_1.floatPropertyChanged += this.floatPropertyChangedListenerOf_widget_1;
				this._widget_1.Vec2PropertyChanged += this.Vec2PropertyChangedListenerOf_widget_1;
				this._widget_1.Vector2PropertyChanged += this.Vector2PropertyChangedListenerOf_widget_1;
				this._widget_1.doublePropertyChanged += this.doublePropertyChangedListenerOf_widget_1;
				this._widget_1.intPropertyChanged += this.intPropertyChangedListenerOf_widget_1;
				this._widget_1.uintPropertyChanged += this.uintPropertyChangedListenerOf_widget_1;
				this._widget_1.ColorPropertyChanged += this.ColorPropertyChangedListenerOf_widget_1;
				this._widget_2.IsVisible = this._datasource_Root.IsNodesCategories;
				this._widget_2.PropertyChanged += this.PropertyChangedListenerOf_widget_2;
				this._widget_2.boolPropertyChanged += this.boolPropertyChangedListenerOf_widget_2;
				this._widget_2.floatPropertyChanged += this.floatPropertyChangedListenerOf_widget_2;
				this._widget_2.Vec2PropertyChanged += this.Vec2PropertyChangedListenerOf_widget_2;
				this._widget_2.Vector2PropertyChanged += this.Vector2PropertyChangedListenerOf_widget_2;
				this._widget_2.doublePropertyChanged += this.doublePropertyChangedListenerOf_widget_2;
				this._widget_2.intPropertyChanged += this.intPropertyChangedListenerOf_widget_2;
				this._widget_2.uintPropertyChanged += this.uintPropertyChangedListenerOf_widget_2;
				this._widget_2.ColorPropertyChanged += this.ColorPropertyChangedListenerOf_widget_2;
				this._datasource_Root_Nodes = this._datasource_Root.Nodes;
				if (this._datasource_Root_Nodes != null)
				{
					this._datasource_Root_Nodes.ListChanged += this.OnList_datasource_Root_NodesChanged;
					for (int k = 0; k < this._datasource_Root_Nodes.Count; k++)
					{
						MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate = new MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate(base.Context);
						GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate);
						CheerBarkNodeItemVM cheerBarkNodeItemVM = this._datasource_Root_Nodes[k];
						generatedWidgetData.Data = cheerBarkNodeItemVM;
						mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
						this._widget_1_1.AddChildAtIndex(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate, k);
						mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate.CreateWidgets();
						mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate.SetIds();
						mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate.SetAttributes();
						mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate.SetDataSource(cheerBarkNodeItemVM);
					}
					for (int l = 0; l < this._datasource_Root_Nodes.Count; l++)
					{
						MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate = new MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate(base.Context);
						GeneratedWidgetData generatedWidgetData2 = new GeneratedWidgetData(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate);
						CheerBarkNodeItemVM cheerBarkNodeItemVM2 = this._datasource_Root_Nodes[l];
						generatedWidgetData2.Data = cheerBarkNodeItemVM2;
						mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate.AddComponent(generatedWidgetData2);
						this._widget_2_0.AddChildAtIndex(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate, l);
						mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate.CreateWidgets();
						mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate.SetIds();
						mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate.SetAttributes();
						mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate.SetDataSource(cheerBarkNodeItemVM2);
					}
				}
			}
		}

		// Token: 0x060000E2 RID: 226 RVA: 0x00007DC8 File Offset: 0x00005FC8
		private void RefreshDataSource_datasource_Root_Nodes(MBBindingList<CheerBarkNodeItemVM> newDataSource)
		{
			if (this._datasource_Root_Nodes != null)
			{
				this._datasource_Root_Nodes.ListChanged -= this.OnList_datasource_Root_NodesChanged;
				for (int i = this._widget_1_1.ChildCount - 1; i >= 0; i--)
				{
					Widget child = this._widget_1_1.GetChild(i);
					((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = this._widget_1_1.GetChild(i);
					((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate)child2).SetDataSource(null);
					this._widget_1_1.RemoveChild(child2);
				}
				for (int j = this._widget_2_0.ChildCount - 1; j >= 0; j--)
				{
					Widget child3 = this._widget_2_0.GetChild(j);
					((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate)child3).OnBeforeRemovedChild(child3);
					Widget child4 = this._widget_2_0.GetChild(j);
					((MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate)child4).SetDataSource(null);
					this._widget_2_0.RemoveChild(child4);
				}
				this._datasource_Root_Nodes = null;
			}
			this._datasource_Root_Nodes = newDataSource;
			this._datasource_Root_Nodes = this._datasource_Root.Nodes;
			if (this._datasource_Root_Nodes != null)
			{
				this._datasource_Root_Nodes.ListChanged += this.OnList_datasource_Root_NodesChanged;
				for (int k = 0; k < this._datasource_Root_Nodes.Count; k++)
				{
					MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate = new MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate(base.Context);
					GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate);
					CheerBarkNodeItemVM cheerBarkNodeItemVM = this._datasource_Root_Nodes[k];
					generatedWidgetData.Data = cheerBarkNodeItemVM;
					mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
					this._widget_1_1.AddChildAtIndex(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate, k);
					mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate.CreateWidgets();
					mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate.SetIds();
					mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate.SetAttributes();
					mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_1_ItemTemplate.SetDataSource(cheerBarkNodeItemVM);
				}
				for (int l = 0; l < this._datasource_Root_Nodes.Count; l++)
				{
					MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate = new MainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate(base.Context);
					GeneratedWidgetData generatedWidgetData2 = new GeneratedWidgetData(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate);
					CheerBarkNodeItemVM cheerBarkNodeItemVM2 = this._datasource_Root_Nodes[l];
					generatedWidgetData2.Data = cheerBarkNodeItemVM2;
					mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate.AddComponent(generatedWidgetData2);
					this._widget_2_0.AddChildAtIndex(mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate, l);
					mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate.CreateWidgets();
					mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate.SetIds();
					mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate.SetAttributes();
					mainAgentCheerBarkController__TaleWorlds_MountAndBlade_ViewModelCollection_HUD_MissionMainAgentCheerBarkControllerVM_Dependency_2_ItemTemplate.SetDataSource(cheerBarkNodeItemVM2);
				}
			}
		}

		// Token: 0x04000024 RID: 36
		private Widget _widget;

		// Token: 0x04000025 RID: 37
		private TextWidget _widget_0;

		// Token: 0x04000026 RID: 38
		private Widget _widget_1;

		// Token: 0x04000027 RID: 39
		private Widget _widget_1_0;

		// Token: 0x04000028 RID: 40
		private CircleActionSelectorWidget _widget_1_1;

		// Token: 0x04000029 RID: 41
		private Widget _widget_2;

		// Token: 0x0400002A RID: 42
		private ListPanel _widget_2_0;

		// Token: 0x0400002B RID: 43
		private MissionMainAgentCheerBarkControllerVM _datasource_Root;

		// Token: 0x0400002C RID: 44
		private MBBindingList<CheerBarkNodeItemVM> _datasource_Root_Nodes;
	}
}
