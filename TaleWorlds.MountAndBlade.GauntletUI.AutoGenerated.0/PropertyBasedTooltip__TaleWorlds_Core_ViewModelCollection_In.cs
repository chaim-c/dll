using System;
using System.ComponentModel;
using System.Numerics;
using TaleWorlds.Core.ViewModelCollection.Information;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.GauntletUI.Data;
using TaleWorlds.GauntletUI.Layout;
using TaleWorlds.Library;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets;
using TaleWorlds.MountAndBlade.GauntletUI.Widgets.Information;

namespace TaleWorlds.MountAndBlade.GauntletUI.AutoGenerated0
{
	// Token: 0x02000039 RID: 57
	public class PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM : Widget, IGeneratedGauntletMovieRoot
	{
		// Token: 0x06000BC2 RID: 3010 RVA: 0x00052B29 File Offset: 0x00050D29
		public PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM(UIContext context) : base(context)
		{
		}

		// Token: 0x06000BC3 RID: 3011 RVA: 0x00052B34 File Offset: 0x00050D34
		public void CreateWidgets()
		{
			this._widget = this;
			this._widget_0 = new PropertyBasedTooltipWidget(base.Context);
			this._widget.AddChild(this._widget_0);
			this._widget_0_0 = new ListPanel(base.Context);
			this._widget_0.AddChild(this._widget_0_0);
			this._widget_0_0_0 = new DimensionSyncWidget(base.Context);
			this._widget_0_0.AddChild(this._widget_0_0_0);
			this._widget_0_0_1 = new Widget(base.Context);
			this._widget_0_0.AddChild(this._widget_0_0_1);
			this._widget_0_0_1_0 = new ListPanel(base.Context);
			this._widget_0_0_1.AddChild(this._widget_0_0_1_0);
			this._widget_0_0_2 = new DimensionSyncWidget(base.Context);
			this._widget_0_0.AddChild(this._widget_0_0_2);
		}

		// Token: 0x06000BC4 RID: 3012 RVA: 0x00052C14 File Offset: 0x00050E14
		public void SetIds()
		{
			this._widget_0.Id = "TooltipWidget";
			this._widget_0_0.Id = "Body";
			this._widget_0_0_1.Id = "PropertyListBackground";
			this._widget_0_0_1_0.Id = "PropertyList";
		}

		// Token: 0x06000BC5 RID: 3013 RVA: 0x00052C64 File Offset: 0x00050E64
		public void SetAttributes()
		{
			base.WidthSizePolicy = SizePolicy.StretchToParent;
			base.HeightSizePolicy = SizePolicy.StretchToParent;
			base.IsDisabled = true;
			this._widget_0.WidthSizePolicy = SizePolicy.CoverChildren;
			this._widget_0.HeightSizePolicy = SizePolicy.CoverChildren;
			this._widget_0.NeutralColor = new Color(0f, 0f, 0f, 0.8509805f);
			this._widget_0.AllyColor = new Color(0.02352941f, 0.09019608f, 0.01568628f, 0.8509805f);
			this._widget_0.EnemyColor = new Color(0.08627451f, 0.02745098f, 0.01960784f, 0.8509805f);
			this._widget_0.PropertyListBackground = this._widget_0_0_1;
			this._widget_0.PropertyList = this._widget_0_0_1_0;
			this._widget_0.EnemyTroopsTextBrush = base.Context.GetBrush("Tooltip.EnemyTroop.Text");
			this._widget_0.AllyTroopsTextBrush = base.Context.GetBrush("Tooltip.AllyTroop.Text");
			this._widget_0.NeutralTroopsTextBrush = base.Context.GetBrush("Tooltip.NeutralTroop.Text");
			this._widget_0_0.WidthSizePolicy = SizePolicy.CoverChildren;
			this._widget_0_0.HeightSizePolicy = SizePolicy.CoverChildren;
			this._widget_0_0.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
			this._widget_0_0_0.WidthSizePolicy = SizePolicy.Fixed;
			this._widget_0_0_0.HeightSizePolicy = SizePolicy.Fixed;
			this._widget_0_0_0.SuggestedWidth = 220f;
			this._widget_0_0_0.SuggestedHeight = 12f;
			this._widget_0_0_0.HorizontalAlignment = HorizontalAlignment.Center;
			this._widget_0_0_0.PositionYOffset = 5f;
			this._widget_0_0_0.DimensionToSync = DimensionSyncWidget.Dimensions.Horizontal;
			this._widget_0_0_0.IsEnabled = false;
			this._widget_0_0_0.PaddingAmount = 20;
			this._widget_0_0_0.WidgetToCopyHeightFrom = this._widget_0_0_1_0;
			this._widget_0_0_0.Sprite = base.Context.SpriteData.GetSprite("General\\TooltipHint\\tooltip_frame");
			this._widget_0_0_0.ExtendLeft = 4f;
			this._widget_0_0_0.ExtendRight = 4f;
			this._widget_0_0_1.WidthSizePolicy = SizePolicy.CoverChildren;
			this._widget_0_0_1.HeightSizePolicy = SizePolicy.CoverChildren;
			this._widget_0_0_1.HorizontalAlignment = HorizontalAlignment.Center;
			this._widget_0_0_1.VerticalAlignment = VerticalAlignment.Top;
			this._widget_0_0_1.Sprite = base.Context.SpriteData.GetSprite("BlankWhiteSquare_9");
			this._widget_0_0_1_0.WidthSizePolicy = SizePolicy.CoverChildren;
			this._widget_0_0_1_0.HeightSizePolicy = SizePolicy.CoverChildren;
			this._widget_0_0_1_0.HorizontalAlignment = HorizontalAlignment.Center;
			this._widget_0_0_1_0.VerticalAlignment = VerticalAlignment.Top;
			this._widget_0_0_1_0.MarginTop = 5f;
			this._widget_0_0_1_0.MarginBottom = 5f;
			this._widget_0_0_1_0.StackLayout.LayoutMethod = LayoutMethod.VerticalBottomToTop;
			this._widget_0_0_2.WidthSizePolicy = SizePolicy.Fixed;
			this._widget_0_0_2.HeightSizePolicy = SizePolicy.Fixed;
			this._widget_0_0_2.SuggestedHeight = 12f;
			this._widget_0_0_2.HorizontalAlignment = HorizontalAlignment.Center;
			this._widget_0_0_2.PositionYOffset = -5f;
			this._widget_0_0_2.Sprite = base.Context.SpriteData.GetSprite("General\\TooltipHint\\tooltip_frame");
			this._widget_0_0_2.ExtendLeft = 4f;
			this._widget_0_0_2.ExtendRight = 4f;
			this._widget_0_0_2.DimensionToSync = DimensionSyncWidget.Dimensions.Horizontal;
			this._widget_0_0_2.IsEnabled = false;
			this._widget_0_0_2.PaddingAmount = 20;
			this._widget_0_0_2.WidgetToCopyHeightFrom = this._widget_0_0_1_0;
		}

		// Token: 0x06000BC6 RID: 3014 RVA: 0x00052FDC File Offset: 0x000511DC
		public void RefreshBindingWithChildren()
		{
			PropertyBasedTooltipVM datasource_Root = this._datasource_Root;
			this.SetDataSource(null);
			this.SetDataSource(datasource_Root);
		}

		// Token: 0x06000BC7 RID: 3015 RVA: 0x00053000 File Offset: 0x00051200
		public void DestroyDataSource()
		{
			if (this._datasource_Root != null)
			{
				this._datasource_Root.PropertyChanged -= this.ViewModelPropertyChangedListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithValue -= this.ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithBoolValue -= this.ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithIntValue -= this.ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithFloatValue -= this.ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithUIntValue -= this.ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithColorValue -= this.ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithDoubleValue -= this.ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithVec2Value -= this.ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
				this._widget_0.PropertyChanged -= this.PropertyChangedListenerOf_widget_0;
				this._widget_0.boolPropertyChanged -= this.boolPropertyChangedListenerOf_widget_0;
				this._widget_0.floatPropertyChanged -= this.floatPropertyChangedListenerOf_widget_0;
				this._widget_0.Vec2PropertyChanged -= this.Vec2PropertyChangedListenerOf_widget_0;
				this._widget_0.Vector2PropertyChanged -= this.Vector2PropertyChangedListenerOf_widget_0;
				this._widget_0.doublePropertyChanged -= this.doublePropertyChangedListenerOf_widget_0;
				this._widget_0.intPropertyChanged -= this.intPropertyChangedListenerOf_widget_0;
				this._widget_0.uintPropertyChanged -= this.uintPropertyChangedListenerOf_widget_0;
				this._widget_0.ColorPropertyChanged -= this.ColorPropertyChangedListenerOf_widget_0;
				if (this._datasource_Root_TooltipPropertyList != null)
				{
					this._datasource_Root_TooltipPropertyList.ListChanged -= this.OnList_datasource_Root_TooltipPropertyListChanged;
					for (int i = this._widget_0_0_1_0.ChildCount - 1; i >= 0; i--)
					{
						Widget child = this._widget_0_0_1_0.GetChild(i);
						((PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
						((PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate)this._widget_0_0_1_0.GetChild(i)).DestroyDataSource();
					}
					this._datasource_Root_TooltipPropertyList = null;
				}
				this._datasource_Root = null;
			}
		}

		// Token: 0x06000BC8 RID: 3016 RVA: 0x0005322A File Offset: 0x0005142A
		public void SetDataSource(PropertyBasedTooltipVM dataSource)
		{
			this.RefreshDataSource_datasource_Root(dataSource);
		}

		// Token: 0x06000BC9 RID: 3017 RVA: 0x00053233 File Offset: 0x00051433
		private void PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, object e)
		{
			this.HandleWidgetPropertyChangeOf_widget_0(propertyName);
		}

		// Token: 0x06000BCA RID: 3018 RVA: 0x0005323C File Offset: 0x0005143C
		private void boolPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, bool e)
		{
			this.HandleWidgetPropertyChangeOf_widget_0(propertyName);
		}

		// Token: 0x06000BCB RID: 3019 RVA: 0x00053245 File Offset: 0x00051445
		private void floatPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, float e)
		{
			this.HandleWidgetPropertyChangeOf_widget_0(propertyName);
		}

		// Token: 0x06000BCC RID: 3020 RVA: 0x0005324E File Offset: 0x0005144E
		private void Vec2PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vec2 e)
		{
			this.HandleWidgetPropertyChangeOf_widget_0(propertyName);
		}

		// Token: 0x06000BCD RID: 3021 RVA: 0x00053257 File Offset: 0x00051457
		private void Vector2PropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Vector2 e)
		{
			this.HandleWidgetPropertyChangeOf_widget_0(propertyName);
		}

		// Token: 0x06000BCE RID: 3022 RVA: 0x00053260 File Offset: 0x00051460
		private void doublePropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, double e)
		{
			this.HandleWidgetPropertyChangeOf_widget_0(propertyName);
		}

		// Token: 0x06000BCF RID: 3023 RVA: 0x00053269 File Offset: 0x00051469
		private void intPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, int e)
		{
			this.HandleWidgetPropertyChangeOf_widget_0(propertyName);
		}

		// Token: 0x06000BD0 RID: 3024 RVA: 0x00053272 File Offset: 0x00051472
		private void uintPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, uint e)
		{
			this.HandleWidgetPropertyChangeOf_widget_0(propertyName);
		}

		// Token: 0x06000BD1 RID: 3025 RVA: 0x0005327B File Offset: 0x0005147B
		private void ColorPropertyChangedListenerOf_widget_0(PropertyOwnerObject propertyOwnerObject, string propertyName, Color e)
		{
			this.HandleWidgetPropertyChangeOf_widget_0(propertyName);
		}

		// Token: 0x06000BD2 RID: 3026 RVA: 0x00053284 File Offset: 0x00051484
		private void HandleWidgetPropertyChangeOf_widget_0(string propertyName)
		{
			if (propertyName == "IsVisible")
			{
				this._datasource_Root.IsActive = this._widget_0.IsVisible;
				return;
			}
			if (propertyName == "Mode")
			{
				this._datasource_Root.Mode = this._widget_0.Mode;
				return;
			}
		}

		// Token: 0x06000BD3 RID: 3027 RVA: 0x000532D9 File Offset: 0x000514D9
		private void ViewModelPropertyChangedListenerOf_datasource_Root(object sender, PropertyChangedEventArgs e)
		{
			this.HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
		}

		// Token: 0x06000BD4 RID: 3028 RVA: 0x000532E7 File Offset: 0x000514E7
		private void ViewModelPropertyChangedWithValueListenerOf_datasource_Root(object sender, PropertyChangedWithValueEventArgs e)
		{
			this.HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
		}

		// Token: 0x06000BD5 RID: 3029 RVA: 0x000532F5 File Offset: 0x000514F5
		private void ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root(object sender, PropertyChangedWithBoolValueEventArgs e)
		{
			this.HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
		}

		// Token: 0x06000BD6 RID: 3030 RVA: 0x00053303 File Offset: 0x00051503
		private void ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithIntValueEventArgs e)
		{
			this.HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
		}

		// Token: 0x06000BD7 RID: 3031 RVA: 0x00053311 File Offset: 0x00051511
		private void ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root(object sender, PropertyChangedWithFloatValueEventArgs e)
		{
			this.HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
		}

		// Token: 0x06000BD8 RID: 3032 RVA: 0x0005331F File Offset: 0x0005151F
		private void ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root(object sender, PropertyChangedWithUIntValueEventArgs e)
		{
			this.HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
		}

		// Token: 0x06000BD9 RID: 3033 RVA: 0x0005332D File Offset: 0x0005152D
		private void ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root(object sender, PropertyChangedWithColorValueEventArgs e)
		{
			this.HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
		}

		// Token: 0x06000BDA RID: 3034 RVA: 0x0005333B File Offset: 0x0005153B
		private void ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root(object sender, PropertyChangedWithDoubleValueEventArgs e)
		{
			this.HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
		}

		// Token: 0x06000BDB RID: 3035 RVA: 0x00053349 File Offset: 0x00051549
		private void ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root(object sender, PropertyChangedWithVec2ValueEventArgs e)
		{
			this.HandleViewModelPropertyChangeOf_datasource_Root(e.PropertyName);
		}

		// Token: 0x06000BDC RID: 3036 RVA: 0x00053358 File Offset: 0x00051558
		private void HandleViewModelPropertyChangeOf_datasource_Root(string propertyName)
		{
			if (propertyName == "TooltipPropertyList")
			{
				this.RefreshDataSource_datasource_Root_TooltipPropertyList(this._datasource_Root.TooltipPropertyList);
				return;
			}
			if (propertyName == "IsActive")
			{
				this._widget_0.IsVisible = this._datasource_Root.IsActive;
				return;
			}
			if (propertyName == "Mode")
			{
				this._widget_0.Mode = this._datasource_Root.Mode;
				return;
			}
		}

		// Token: 0x06000BDD RID: 3037 RVA: 0x000533CC File Offset: 0x000515CC
		public void OnList_datasource_Root_TooltipPropertyListChanged(object sender, ListChangedEventArgs e)
		{
			switch (e.ListChangedType)
			{
			case ListChangedType.Reset:
				for (int i = this._widget_0_0_1_0.ChildCount - 1; i >= 0; i--)
				{
					Widget child = this._widget_0_0_1_0.GetChild(i);
					((PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = this._widget_0_0_1_0.GetChild(i);
					((PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate)child2).SetDataSource(null);
					this._widget_0_0_1_0.RemoveChild(child2);
				}
				return;
			case ListChangedType.Sorted:
				for (int j = 0; j < this._datasource_Root_TooltipPropertyList.Count; j++)
				{
					TooltipProperty bindingObject = this._datasource_Root_TooltipPropertyList[j];
					this._widget_0_0_1_0.FindChild((Widget widget) => widget.GetComponent<GeneratedWidgetData>().Data == bindingObject).SetSiblingIndex(j, false);
				}
				return;
			case ListChangedType.ItemAdded:
			{
				PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate = new PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate(base.Context);
				GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate);
				TooltipProperty tooltipProperty = this._datasource_Root_TooltipPropertyList[e.NewIndex];
				generatedWidgetData.Data = tooltipProperty;
				propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
				this._widget_0_0_1_0.AddChildAtIndex(propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate, e.NewIndex);
				propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate.CreateWidgets();
				propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate.SetIds();
				propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate.SetAttributes();
				propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate.SetDataSource(tooltipProperty);
				return;
			}
			case ListChangedType.ItemBeforeDeleted:
			{
				Widget child3 = this._widget_0_0_1_0.GetChild(e.NewIndex);
				((PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate)child3).OnBeforeRemovedChild(child3);
				return;
			}
			case ListChangedType.ItemDeleted:
			{
				Widget child4 = this._widget_0_0_1_0.GetChild(e.NewIndex);
				((PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate)child4).SetDataSource(null);
				this._widget_0_0_1_0.RemoveChild(child4);
				break;
			}
			case ListChangedType.ItemChanged:
				break;
			default:
				return;
			}
		}

		// Token: 0x06000BDE RID: 3038 RVA: 0x00053568 File Offset: 0x00051768
		private void RefreshDataSource_datasource_Root(PropertyBasedTooltipVM newDataSource)
		{
			if (this._datasource_Root != null)
			{
				this._datasource_Root.PropertyChanged -= this.ViewModelPropertyChangedListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithValue -= this.ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithBoolValue -= this.ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithIntValue -= this.ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithFloatValue -= this.ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithUIntValue -= this.ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithColorValue -= this.ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithDoubleValue -= this.ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithVec2Value -= this.ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
				this._widget_0.PropertyChanged -= this.PropertyChangedListenerOf_widget_0;
				this._widget_0.boolPropertyChanged -= this.boolPropertyChangedListenerOf_widget_0;
				this._widget_0.floatPropertyChanged -= this.floatPropertyChangedListenerOf_widget_0;
				this._widget_0.Vec2PropertyChanged -= this.Vec2PropertyChangedListenerOf_widget_0;
				this._widget_0.Vector2PropertyChanged -= this.Vector2PropertyChangedListenerOf_widget_0;
				this._widget_0.doublePropertyChanged -= this.doublePropertyChangedListenerOf_widget_0;
				this._widget_0.intPropertyChanged -= this.intPropertyChangedListenerOf_widget_0;
				this._widget_0.uintPropertyChanged -= this.uintPropertyChangedListenerOf_widget_0;
				this._widget_0.ColorPropertyChanged -= this.ColorPropertyChangedListenerOf_widget_0;
				if (this._datasource_Root_TooltipPropertyList != null)
				{
					this._datasource_Root_TooltipPropertyList.ListChanged -= this.OnList_datasource_Root_TooltipPropertyListChanged;
					for (int i = this._widget_0_0_1_0.ChildCount - 1; i >= 0; i--)
					{
						Widget child = this._widget_0_0_1_0.GetChild(i);
						((PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
						Widget child2 = this._widget_0_0_1_0.GetChild(i);
						((PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate)child2).SetDataSource(null);
						this._widget_0_0_1_0.RemoveChild(child2);
					}
					this._datasource_Root_TooltipPropertyList = null;
				}
				this._datasource_Root = null;
			}
			this._datasource_Root = newDataSource;
			if (this._datasource_Root != null)
			{
				this._datasource_Root.PropertyChanged += this.ViewModelPropertyChangedListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithValue += this.ViewModelPropertyChangedWithValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithBoolValue += this.ViewModelPropertyChangedWithBoolValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithIntValue += this.ViewModelPropertyChangedWithIntValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithFloatValue += this.ViewModelPropertyChangedWithFloatValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithUIntValue += this.ViewModelPropertyChangedWithUIntValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithColorValue += this.ViewModelPropertyChangedWithColorValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithDoubleValue += this.ViewModelPropertyChangedWithDoubleValueListenerOf_datasource_Root;
				this._datasource_Root.PropertyChangedWithVec2Value += this.ViewModelPropertyChangedWithVec2ValueListenerOf_datasource_Root;
				this._widget_0.IsVisible = this._datasource_Root.IsActive;
				this._widget_0.Mode = this._datasource_Root.Mode;
				this._widget_0.PropertyChanged += this.PropertyChangedListenerOf_widget_0;
				this._widget_0.boolPropertyChanged += this.boolPropertyChangedListenerOf_widget_0;
				this._widget_0.floatPropertyChanged += this.floatPropertyChangedListenerOf_widget_0;
				this._widget_0.Vec2PropertyChanged += this.Vec2PropertyChangedListenerOf_widget_0;
				this._widget_0.Vector2PropertyChanged += this.Vector2PropertyChangedListenerOf_widget_0;
				this._widget_0.doublePropertyChanged += this.doublePropertyChangedListenerOf_widget_0;
				this._widget_0.intPropertyChanged += this.intPropertyChangedListenerOf_widget_0;
				this._widget_0.uintPropertyChanged += this.uintPropertyChangedListenerOf_widget_0;
				this._widget_0.ColorPropertyChanged += this.ColorPropertyChangedListenerOf_widget_0;
				this._datasource_Root_TooltipPropertyList = this._datasource_Root.TooltipPropertyList;
				if (this._datasource_Root_TooltipPropertyList != null)
				{
					this._datasource_Root_TooltipPropertyList.ListChanged += this.OnList_datasource_Root_TooltipPropertyListChanged;
					for (int j = 0; j < this._datasource_Root_TooltipPropertyList.Count; j++)
					{
						PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate = new PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate(base.Context);
						GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate);
						TooltipProperty tooltipProperty = this._datasource_Root_TooltipPropertyList[j];
						generatedWidgetData.Data = tooltipProperty;
						propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
						this._widget_0_0_1_0.AddChildAtIndex(propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate, j);
						propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate.CreateWidgets();
						propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate.SetIds();
						propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate.SetAttributes();
						propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate.SetDataSource(tooltipProperty);
					}
				}
			}
		}

		// Token: 0x06000BDF RID: 3039 RVA: 0x00053A28 File Offset: 0x00051C28
		private void RefreshDataSource_datasource_Root_TooltipPropertyList(MBBindingList<TooltipProperty> newDataSource)
		{
			if (this._datasource_Root_TooltipPropertyList != null)
			{
				this._datasource_Root_TooltipPropertyList.ListChanged -= this.OnList_datasource_Root_TooltipPropertyListChanged;
				for (int i = this._widget_0_0_1_0.ChildCount - 1; i >= 0; i--)
				{
					Widget child = this._widget_0_0_1_0.GetChild(i);
					((PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate)child).OnBeforeRemovedChild(child);
					Widget child2 = this._widget_0_0_1_0.GetChild(i);
					((PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate)child2).SetDataSource(null);
					this._widget_0_0_1_0.RemoveChild(child2);
				}
				this._datasource_Root_TooltipPropertyList = null;
			}
			this._datasource_Root_TooltipPropertyList = newDataSource;
			this._datasource_Root_TooltipPropertyList = this._datasource_Root.TooltipPropertyList;
			if (this._datasource_Root_TooltipPropertyList != null)
			{
				this._datasource_Root_TooltipPropertyList.ListChanged += this.OnList_datasource_Root_TooltipPropertyListChanged;
				for (int j = 0; j < this._datasource_Root_TooltipPropertyList.Count; j++)
				{
					PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate = new PropertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate(base.Context);
					GeneratedWidgetData generatedWidgetData = new GeneratedWidgetData(propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate);
					TooltipProperty tooltipProperty = this._datasource_Root_TooltipPropertyList[j];
					generatedWidgetData.Data = tooltipProperty;
					propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate.AddComponent(generatedWidgetData);
					this._widget_0_0_1_0.AddChildAtIndex(propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate, j);
					propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate.CreateWidgets();
					propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate.SetIds();
					propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate.SetAttributes();
					propertyBasedTooltip__TaleWorlds_Core_ViewModelCollection_Information_PropertyBasedTooltipVM_Dependency_1_ItemTemplate.SetDataSource(tooltipProperty);
				}
			}
		}

		// Token: 0x040001D1 RID: 465
		private Widget _widget;

		// Token: 0x040001D2 RID: 466
		private PropertyBasedTooltipWidget _widget_0;

		// Token: 0x040001D3 RID: 467
		private ListPanel _widget_0_0;

		// Token: 0x040001D4 RID: 468
		private DimensionSyncWidget _widget_0_0_0;

		// Token: 0x040001D5 RID: 469
		private Widget _widget_0_0_1;

		// Token: 0x040001D6 RID: 470
		private ListPanel _widget_0_0_1_0;

		// Token: 0x040001D7 RID: 471
		private DimensionSyncWidget _widget_0_0_2;

		// Token: 0x040001D8 RID: 472
		private PropertyBasedTooltipVM _datasource_Root;

		// Token: 0x040001D9 RID: 473
		private MBBindingList<TooltipProperty> _datasource_Root_TooltipPropertyList;
	}
}
