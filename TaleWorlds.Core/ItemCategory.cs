using System;
using System.Collections.Generic;
using TaleWorlds.Localization;
using TaleWorlds.ObjectSystem;

namespace TaleWorlds.Core
{
	// Token: 0x0200002D RID: 45
	public sealed class ItemCategory : MBObjectBase
	{
		// Token: 0x06000305 RID: 773 RVA: 0x0000CBE4 File Offset: 0x0000ADE4
		internal static void AutoGeneratedStaticCollectObjectsItemCategory(object o, List<object> collectedObjects)
		{
			((ItemCategory)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06000306 RID: 774 RVA: 0x0000CBF2 File Offset: 0x0000ADF2
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06000307 RID: 775 RVA: 0x0000CBFB File Offset: 0x0000ADFB
		public ItemCategory()
		{
		}

		// Token: 0x170000F2 RID: 242
		// (get) Token: 0x06000308 RID: 776 RVA: 0x0000CC03 File Offset: 0x0000AE03
		// (set) Token: 0x06000309 RID: 777 RVA: 0x0000CC0B File Offset: 0x0000AE0B
		public bool IsTradeGood { get; private set; }

		// Token: 0x170000F3 RID: 243
		// (get) Token: 0x0600030A RID: 778 RVA: 0x0000CC14 File Offset: 0x0000AE14
		// (set) Token: 0x0600030B RID: 779 RVA: 0x0000CC1C File Offset: 0x0000AE1C
		public bool IsAnimal { get; private set; }

		// Token: 0x170000F4 RID: 244
		// (get) Token: 0x0600030C RID: 780 RVA: 0x0000CC25 File Offset: 0x0000AE25
		// (set) Token: 0x0600030D RID: 781 RVA: 0x0000CC2D File Offset: 0x0000AE2D
		public ItemCategory CanSubstitute { get; private set; }

		// Token: 0x170000F5 RID: 245
		// (get) Token: 0x0600030E RID: 782 RVA: 0x0000CC36 File Offset: 0x0000AE36
		// (set) Token: 0x0600030F RID: 783 RVA: 0x0000CC3E File Offset: 0x0000AE3E
		public float SubstitutionFactor { get; private set; }

		// Token: 0x170000F6 RID: 246
		// (get) Token: 0x06000310 RID: 784 RVA: 0x0000CC47 File Offset: 0x0000AE47
		// (set) Token: 0x06000311 RID: 785 RVA: 0x0000CC4F File Offset: 0x0000AE4F
		public ItemCategory.Property Properties { get; private set; }

		// Token: 0x170000F7 RID: 247
		// (get) Token: 0x06000312 RID: 786 RVA: 0x0000CC58 File Offset: 0x0000AE58
		// (set) Token: 0x06000313 RID: 787 RVA: 0x0000CC60 File Offset: 0x0000AE60
		public bool IsValid { get; private set; }

		// Token: 0x06000314 RID: 788 RVA: 0x0000CC69 File Offset: 0x0000AE69
		public ItemCategory(string stringId) : base(stringId)
		{
		}

		// Token: 0x06000315 RID: 789 RVA: 0x0000CC74 File Offset: 0x0000AE74
		public ItemCategory InitializeObject(bool isTradeGood = false, int baseDemand = 0, int luxuryDemand = 0, ItemCategory.Property properties = ItemCategory.Property.None, ItemCategory canSubstitute = null, float substitutionFactor = 0f, bool isAnimal = false, bool isValid = true)
		{
			base.Initialize();
			this.Properties = properties;
			this.BaseDemand = (float)baseDemand * 0.001f;
			this.LuxuryDemand = (float)luxuryDemand * 0.001f;
			this.IsTradeGood = isTradeGood;
			this.IsAnimal = isAnimal;
			this.CanSubstitute = canSubstitute;
			this.SubstitutionFactor = substitutionFactor;
			this.IsValid = isValid;
			base.AfterInitialized();
			return this;
		}

		// Token: 0x06000316 RID: 790 RVA: 0x0000CCD9 File Offset: 0x0000AED9
		public override TextObject GetName()
		{
			return GameTexts.FindText("str_item_category", base.StringId);
		}

		// Token: 0x06000317 RID: 791 RVA: 0x0000CCEB File Offset: 0x0000AEEB
		public override string ToString()
		{
			return base.StringId;
		}

		// Token: 0x170000F8 RID: 248
		// (get) Token: 0x06000318 RID: 792 RVA: 0x0000CCF3 File Offset: 0x0000AEF3
		// (set) Token: 0x06000319 RID: 793 RVA: 0x0000CCFB File Offset: 0x0000AEFB
		public float BaseDemand { get; private set; }

		// Token: 0x170000F9 RID: 249
		// (get) Token: 0x0600031A RID: 794 RVA: 0x0000CD04 File Offset: 0x0000AF04
		// (set) Token: 0x0600031B RID: 795 RVA: 0x0000CD0C File Offset: 0x0000AF0C
		public float LuxuryDemand { get; private set; }

		// Token: 0x020000E5 RID: 229
		public enum Property
		{
			// Token: 0x0400065D RID: 1629
			None,
			// Token: 0x0400065E RID: 1630
			BonusToProduction,
			// Token: 0x0400065F RID: 1631
			BonusToFoodStores,
			// Token: 0x04000660 RID: 1632
			BonusToProsperity,
			// Token: 0x04000661 RID: 1633
			BonusToLoyalty,
			// Token: 0x04000662 RID: 1634
			BonusToMilitia,
			// Token: 0x04000663 RID: 1635
			BonusToGarrison,
			// Token: 0x04000664 RID: 1636
			BonusToTax
		}
	}
}
