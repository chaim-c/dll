using System;
using System.Collections.Generic;
using System.Globalization;
using System.Xml;
using TaleWorlds.Library;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.Core
{
	// Token: 0x0200003F RID: 63
	[Serializable]
	public struct StaticBodyProperties : ISerializableObject
	{
		// Token: 0x060004F1 RID: 1265 RVA: 0x00011AD8 File Offset: 0x0000FCD8
		public static void AutoGeneratedStaticCollectObjectsStaticBodyProperties(object o, List<object> collectedObjects)
		{
			((StaticBodyProperties)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x060004F2 RID: 1266 RVA: 0x00011AF4 File Offset: 0x0000FCF4
		private void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
		}

		// Token: 0x060004F3 RID: 1267 RVA: 0x00011AF8 File Offset: 0x0000FCF8
		internal static object AutoGeneratedGetMemberValueKeyPart1(object o)
		{
			return ((StaticBodyProperties)o).KeyPart1;
		}

		// Token: 0x060004F4 RID: 1268 RVA: 0x00011B18 File Offset: 0x0000FD18
		internal static object AutoGeneratedGetMemberValueKeyPart2(object o)
		{
			return ((StaticBodyProperties)o).KeyPart2;
		}

		// Token: 0x060004F5 RID: 1269 RVA: 0x00011B38 File Offset: 0x0000FD38
		internal static object AutoGeneratedGetMemberValueKeyPart3(object o)
		{
			return ((StaticBodyProperties)o).KeyPart3;
		}

		// Token: 0x060004F6 RID: 1270 RVA: 0x00011B58 File Offset: 0x0000FD58
		internal static object AutoGeneratedGetMemberValueKeyPart4(object o)
		{
			return ((StaticBodyProperties)o).KeyPart4;
		}

		// Token: 0x060004F7 RID: 1271 RVA: 0x00011B78 File Offset: 0x0000FD78
		internal static object AutoGeneratedGetMemberValueKeyPart5(object o)
		{
			return ((StaticBodyProperties)o).KeyPart5;
		}

		// Token: 0x060004F8 RID: 1272 RVA: 0x00011B98 File Offset: 0x0000FD98
		internal static object AutoGeneratedGetMemberValueKeyPart6(object o)
		{
			return ((StaticBodyProperties)o).KeyPart6;
		}

		// Token: 0x060004F9 RID: 1273 RVA: 0x00011BB8 File Offset: 0x0000FDB8
		internal static object AutoGeneratedGetMemberValueKeyPart7(object o)
		{
			return ((StaticBodyProperties)o).KeyPart7;
		}

		// Token: 0x060004FA RID: 1274 RVA: 0x00011BD8 File Offset: 0x0000FDD8
		internal static object AutoGeneratedGetMemberValueKeyPart8(object o)
		{
			return ((StaticBodyProperties)o).KeyPart8;
		}

		// Token: 0x170001AC RID: 428
		// (get) Token: 0x060004FC RID: 1276 RVA: 0x00011C01 File Offset: 0x0000FE01
		// (set) Token: 0x060004FB RID: 1275 RVA: 0x00011BF8 File Offset: 0x0000FDF8
		[SaveableProperty(1)]
		public ulong KeyPart1 { get; private set; }

		// Token: 0x170001AD RID: 429
		// (get) Token: 0x060004FE RID: 1278 RVA: 0x00011C12 File Offset: 0x0000FE12
		// (set) Token: 0x060004FD RID: 1277 RVA: 0x00011C09 File Offset: 0x0000FE09
		[SaveableProperty(2)]
		public ulong KeyPart2 { get; private set; }

		// Token: 0x170001AE RID: 430
		// (get) Token: 0x06000500 RID: 1280 RVA: 0x00011C23 File Offset: 0x0000FE23
		// (set) Token: 0x060004FF RID: 1279 RVA: 0x00011C1A File Offset: 0x0000FE1A
		[SaveableProperty(3)]
		public ulong KeyPart3 { get; private set; }

		// Token: 0x170001AF RID: 431
		// (get) Token: 0x06000502 RID: 1282 RVA: 0x00011C34 File Offset: 0x0000FE34
		// (set) Token: 0x06000501 RID: 1281 RVA: 0x00011C2B File Offset: 0x0000FE2B
		[SaveableProperty(4)]
		public ulong KeyPart4 { get; private set; }

		// Token: 0x170001B0 RID: 432
		// (get) Token: 0x06000504 RID: 1284 RVA: 0x00011C45 File Offset: 0x0000FE45
		// (set) Token: 0x06000503 RID: 1283 RVA: 0x00011C3C File Offset: 0x0000FE3C
		[SaveableProperty(5)]
		public ulong KeyPart5 { get; private set; }

		// Token: 0x170001B1 RID: 433
		// (get) Token: 0x06000506 RID: 1286 RVA: 0x00011C56 File Offset: 0x0000FE56
		// (set) Token: 0x06000505 RID: 1285 RVA: 0x00011C4D File Offset: 0x0000FE4D
		[SaveableProperty(6)]
		public ulong KeyPart6 { get; private set; }

		// Token: 0x170001B2 RID: 434
		// (get) Token: 0x06000508 RID: 1288 RVA: 0x00011C67 File Offset: 0x0000FE67
		// (set) Token: 0x06000507 RID: 1287 RVA: 0x00011C5E File Offset: 0x0000FE5E
		[SaveableProperty(7)]
		public ulong KeyPart7 { get; private set; }

		// Token: 0x170001B3 RID: 435
		// (get) Token: 0x0600050A RID: 1290 RVA: 0x00011C78 File Offset: 0x0000FE78
		// (set) Token: 0x06000509 RID: 1289 RVA: 0x00011C6F File Offset: 0x0000FE6F
		[SaveableProperty(8)]
		public ulong KeyPart8 { get; private set; }

		// Token: 0x0600050B RID: 1291 RVA: 0x00011C80 File Offset: 0x0000FE80
		public StaticBodyProperties(ulong keyPart1, ulong keyPart2, ulong keyPart3, ulong keyPart4, ulong keyPart5, ulong keyPart6, ulong keyPart7, ulong keyPart8)
		{
			this.KeyPart1 = keyPart1;
			this.KeyPart2 = keyPart2;
			this.KeyPart3 = keyPart3;
			this.KeyPart4 = keyPart4;
			this.KeyPart5 = keyPart5;
			this.KeyPart6 = keyPart6;
			this.KeyPart7 = keyPart7;
			this.KeyPart8 = keyPart8;
		}

		// Token: 0x0600050C RID: 1292 RVA: 0x00011CC0 File Offset: 0x0000FEC0
		public static bool FromXmlNode(XmlNode node, out StaticBodyProperties staticBodyProperties)
		{
			string value = node.Attributes["key"].Value;
			if (value.Length != 128)
			{
				staticBodyProperties = default(StaticBodyProperties);
				return false;
			}
			ulong keyPart;
			ulong.TryParse(value.Substring(0, 16), NumberStyles.AllowHexSpecifier, CultureInfo.CurrentCulture, out keyPart);
			ulong keyPart2;
			ulong.TryParse(value.Substring(16, 16), NumberStyles.AllowHexSpecifier, CultureInfo.CurrentCulture, out keyPart2);
			ulong keyPart3;
			ulong.TryParse(value.Substring(32, 16), NumberStyles.AllowHexSpecifier, CultureInfo.CurrentCulture, out keyPart3);
			ulong keyPart4;
			ulong.TryParse(value.Substring(48, 16), NumberStyles.AllowHexSpecifier, CultureInfo.CurrentCulture, out keyPart4);
			ulong keyPart5;
			ulong.TryParse(value.Substring(64, 16), NumberStyles.AllowHexSpecifier, CultureInfo.CurrentCulture, out keyPart5);
			ulong keyPart6;
			ulong.TryParse(value.Substring(80, 16), NumberStyles.AllowHexSpecifier, CultureInfo.CurrentCulture, out keyPart6);
			ulong keyPart7;
			ulong.TryParse(value.Substring(96, 16), NumberStyles.AllowHexSpecifier, CultureInfo.CurrentCulture, out keyPart7);
			ulong keyPart8;
			ulong.TryParse(value.Substring(112, 16), NumberStyles.AllowHexSpecifier, CultureInfo.CurrentCulture, out keyPart8);
			staticBodyProperties = new StaticBodyProperties(keyPart, keyPart2, keyPart3, keyPart4, keyPart5, keyPart6, keyPart7, keyPart8);
			return true;
		}

		// Token: 0x0600050D RID: 1293 RVA: 0x00011DF4 File Offset: 0x0000FFF4
		public override int GetHashCode()
		{
			uint num = ((((((((((((((2166136261U ^ (uint)((uint)this.KeyPart1 << 32)) * 16777619U ^ (uint)((uint)this.KeyPart2 << 32)) * 16777619U ^ (uint)((uint)this.KeyPart3 << 32)) * 16777619U ^ (uint)((uint)this.KeyPart4 << 32)) * 16777619U ^ (uint)((uint)this.KeyPart5 << 32)) * 16777619U ^ (uint)((uint)this.KeyPart6 << 32)) * 16777619U ^ (uint)((uint)this.KeyPart7 << 32)) * 16777619U ^ (uint)this.KeyPart1) * 16777619U ^ (uint)this.KeyPart2) * 16777619U ^ (uint)this.KeyPart3) * 16777619U ^ (uint)this.KeyPart4) * 16777619U ^ (uint)this.KeyPart5) * 16777619U ^ (uint)this.KeyPart6) * 16777619U ^ (uint)this.KeyPart7) * 16777619U;
			uint num2 = num + (num << 13);
			uint num3 = num2 ^ num2 >> 7;
			uint num4 = num3 + (num3 << 3);
			uint num5 = num4 ^ num4 >> 17;
			return (int)(num5 + (num5 << 5));
		}

		// Token: 0x0600050E RID: 1294 RVA: 0x00011EF5 File Offset: 0x000100F5
		public override bool Equals(object obj)
		{
			return base.Equals(obj);
		}

		// Token: 0x0600050F RID: 1295 RVA: 0x00011F08 File Offset: 0x00010108
		public static bool operator ==(StaticBodyProperties a, StaticBodyProperties b)
		{
			return a == b || (a != null && b != null && (a.KeyPart1 == b.KeyPart1 && a.KeyPart2 == b.KeyPart2 && a.KeyPart3 == b.KeyPart3 && a.KeyPart4 == b.KeyPart4 && a.KeyPart5 == b.KeyPart5 && a.KeyPart6 == b.KeyPart6 && a.KeyPart7 == b.KeyPart7) && a.KeyPart8 == b.KeyPart8);
		}

		// Token: 0x06000510 RID: 1296 RVA: 0x00011FB9 File Offset: 0x000101B9
		public static bool operator !=(StaticBodyProperties a, StaticBodyProperties b)
		{
			return !(a == b);
		}

		// Token: 0x06000511 RID: 1297 RVA: 0x00011FC8 File Offset: 0x000101C8
		public override string ToString()
		{
			MBStringBuilder mbstringBuilder = default(MBStringBuilder);
			mbstringBuilder.Initialize(150, "ToString");
			mbstringBuilder.Append<string>("key=\"");
			mbstringBuilder.Append<string>(this.KeyPart1.ToString("X").PadLeft(16, '0'));
			mbstringBuilder.Append<string>(this.KeyPart2.ToString("X").PadLeft(16, '0'));
			mbstringBuilder.Append<string>(this.KeyPart3.ToString("X").PadLeft(16, '0'));
			mbstringBuilder.Append<string>(this.KeyPart4.ToString("X").PadLeft(16, '0'));
			mbstringBuilder.Append<string>(this.KeyPart5.ToString("X").PadLeft(16, '0'));
			mbstringBuilder.Append<string>(this.KeyPart6.ToString("X").PadLeft(16, '0'));
			mbstringBuilder.Append<string>(this.KeyPart7.ToString("X").PadLeft(16, '0'));
			mbstringBuilder.Append<string>(this.KeyPart8.ToString("X").PadLeft(16, '0'));
			mbstringBuilder.Append<string>("\" ");
			return mbstringBuilder.ToStringAndRelease();
		}

		// Token: 0x06000512 RID: 1298 RVA: 0x00012130 File Offset: 0x00010330
		void ISerializableObject.DeserializeFrom(IReader reader)
		{
			this.KeyPart1 = reader.ReadULong();
			this.KeyPart2 = reader.ReadULong();
			this.KeyPart3 = reader.ReadULong();
			this.KeyPart4 = reader.ReadULong();
			this.KeyPart5 = reader.ReadULong();
			this.KeyPart6 = reader.ReadULong();
			this.KeyPart7 = reader.ReadULong();
			this.KeyPart8 = reader.ReadULong();
		}

		// Token: 0x06000513 RID: 1299 RVA: 0x000121A0 File Offset: 0x000103A0
		void ISerializableObject.SerializeTo(IWriter writer)
		{
			writer.WriteULong(this.KeyPart1);
			writer.WriteULong(this.KeyPart2);
			writer.WriteULong(this.KeyPart3);
			writer.WriteULong(this.KeyPart4);
			writer.WriteULong(this.KeyPart5);
			writer.WriteULong(this.KeyPart6);
			writer.WriteULong(this.KeyPart7);
			writer.WriteULong(this.KeyPart8);
		}

		// Token: 0x06000514 RID: 1300 RVA: 0x00012210 File Offset: 0x00010410
		public static StaticBodyProperties GetRandomStaticBodyProperties()
		{
			Random random = new Random((int)DateTime.Now.Ticks);
			StaticBodyProperties result = default(StaticBodyProperties);
			result.KeyPart1 = (ulong)((long)random.Next());
			result.KeyPart1 <<= 32;
			result.KeyPart1 += (ulong)((long)random.Next());
			result.KeyPart2 = (ulong)((long)random.Next());
			result.KeyPart2 <<= 32;
			result.KeyPart2 += (ulong)((long)random.Next());
			result.KeyPart3 = (ulong)((long)random.Next());
			result.KeyPart3 <<= 32;
			result.KeyPart3 += (ulong)((long)random.Next());
			result.KeyPart4 = (ulong)((long)random.Next());
			result.KeyPart4 <<= 32;
			result.KeyPart4 += (ulong)((long)random.Next());
			result.KeyPart5 = (ulong)((long)random.Next());
			result.KeyPart5 <<= 32;
			result.KeyPart5 += (ulong)((long)random.Next());
			result.KeyPart6 = (ulong)((long)random.Next());
			result.KeyPart6 <<= 32;
			result.KeyPart6 += (ulong)((long)random.Next());
			result.KeyPart7 = (ulong)((long)random.Next());
			result.KeyPart7 <<= 32;
			result.KeyPart7 += (ulong)((long)random.Next());
			result.KeyPart8 = (ulong)((long)random.Next());
			result.KeyPart8 <<= 32;
			result.KeyPart8 += (ulong)((long)random.Next());
			return result;
		}

		// Token: 0x04000254 RID: 596
		public const int WeightKeyNo = 59;

		// Token: 0x04000255 RID: 597
		public const int BuildKeyNo = 60;
	}
}
