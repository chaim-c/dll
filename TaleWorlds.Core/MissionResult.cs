using System;
using System.Collections.Generic;

namespace TaleWorlds.Core
{
	// Token: 0x02000032 RID: 50
	public class MissionResult
	{
		// Token: 0x060003DB RID: 987 RVA: 0x0000F24E File Offset: 0x0000D44E
		internal static void AutoGeneratedStaticCollectObjectsMissionResult(object o, List<object> collectedObjects)
		{
			((MissionResult)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x060003DC RID: 988 RVA: 0x0000F25C File Offset: 0x0000D45C
		protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
		}

		// Token: 0x1700014A RID: 330
		// (get) Token: 0x060003DD RID: 989 RVA: 0x0000F25E File Offset: 0x0000D45E
		// (set) Token: 0x060003DE RID: 990 RVA: 0x0000F266 File Offset: 0x0000D466
		public BattleState BattleState { get; private set; }

		// Token: 0x1700014B RID: 331
		// (get) Token: 0x060003DF RID: 991 RVA: 0x0000F26F File Offset: 0x0000D46F
		public bool BattleResolved
		{
			get
			{
				return this.PlayerVictory || this.PlayerDefeated;
			}
		}

		// Token: 0x1700014C RID: 332
		// (get) Token: 0x060003E0 RID: 992 RVA: 0x0000F281 File Offset: 0x0000D481
		// (set) Token: 0x060003E1 RID: 993 RVA: 0x0000F289 File Offset: 0x0000D489
		public bool PlayerVictory { get; private set; }

		// Token: 0x1700014D RID: 333
		// (get) Token: 0x060003E2 RID: 994 RVA: 0x0000F292 File Offset: 0x0000D492
		// (set) Token: 0x060003E3 RID: 995 RVA: 0x0000F29A File Offset: 0x0000D49A
		public bool PlayerDefeated { get; private set; }

		// Token: 0x1700014E RID: 334
		// (get) Token: 0x060003E4 RID: 996 RVA: 0x0000F2A3 File Offset: 0x0000D4A3
		// (set) Token: 0x060003E5 RID: 997 RVA: 0x0000F2AB File Offset: 0x0000D4AB
		public bool EnemyRetreated { get; private set; }

		// Token: 0x060003E6 RID: 998 RVA: 0x0000F2B4 File Offset: 0x0000D4B4
		public MissionResult(BattleState battleState, bool playerVictory, bool playerDefeated, bool enemyRetreated)
		{
			this.BattleState = battleState;
			this.PlayerVictory = playerVictory;
			this.PlayerDefeated = playerDefeated;
			this.EnemyRetreated = enemyRetreated;
		}

		// Token: 0x060003E7 RID: 999 RVA: 0x0000F2D9 File Offset: 0x0000D4D9
		public MissionResult()
		{
			this.PlayerVictory = false;
			this.PlayerDefeated = false;
			this.EnemyRetreated = false;
		}

		// Token: 0x060003E8 RID: 1000 RVA: 0x0000F2F6 File Offset: 0x0000D4F6
		public static MissionResult CreateSuccessful(IMission mission, bool enemyRetreated = false)
		{
			return new MissionResult((mission.PlayerTeam.Side == BattleSideEnum.Attacker) ? BattleState.AttackerVictory : BattleState.DefenderVictory, true, false, enemyRetreated);
		}

		// Token: 0x060003E9 RID: 1001 RVA: 0x0000F312 File Offset: 0x0000D512
		public static MissionResult CreateDefeated(IMission mission)
		{
			return new MissionResult((mission.PlayerTeam.Side == BattleSideEnum.Attacker) ? BattleState.DefenderVictory : BattleState.AttackerVictory, false, true, false);
		}

		// Token: 0x060003EA RID: 1002 RVA: 0x0000F32E File Offset: 0x0000D52E
		public static MissionResult CreateDefenderPushedBack()
		{
			return new MissionResult(BattleState.DefenderPullBack, false, false, false);
		}
	}
}
